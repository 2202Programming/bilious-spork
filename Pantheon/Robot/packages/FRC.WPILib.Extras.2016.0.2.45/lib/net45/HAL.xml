<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>HAL</name>
  </assembly>
  <members>
    <member name="T:HAL.Base.AnalogTriggerType"></member>
    <member name="F:HAL.Base.AnalogTriggerType.InWindow"></member>
    <member name="F:HAL.Base.AnalogTriggerType.State"></member>
    <member name="F:HAL.Base.AnalogTriggerType.RisingPulse"></member>
    <member name="F:HAL.Base.AnalogTriggerType.FallingPulse"></member>
    <member name="T:HAL.Base.CANDataArray"></member>
    <member name="P:HAL.Base.CANDataArray.Item(System.Int32)"></member>
    <member name="T:HAL.Base.CANStreamMessage"></member>
    <member name="F:HAL.Base.CANStreamMessage.data"></member>
    <member name="F:HAL.Base.CANStreamMessage.dataSize"></member>
    <member name="F:HAL.Base.CANStreamMessage.messageID"></member>
    <member name="F:HAL.Base.CANStreamMessage.timeStamp"></member>
    <member name="T:HAL.Base.CTR_Code"></member>
    <member name="F:HAL.Base.CTR_Code.CTR_OKAY"></member>
    <member name="F:HAL.Base.CTR_Code.CTR_RxTimeout"></member>
    <member name="F:HAL.Base.CTR_Code.CTR_TxTimeout"></member>
    <member name="F:HAL.Base.CTR_Code.CTR_InvalidParamValue"></member>
    <member name="F:HAL.Base.CTR_Code.CTR_UnexpectedArbId"></member>
    <member name="F:HAL.Base.CTR_Code.CTR_TxFailed"></member>
    <member name="F:HAL.Base.CTR_Code.CTR_SigNotUpdated"></member>
    <member name="T:HAL.Base.HAL"></member>
    <member name="M:HAL.Base.HAL.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Base.HAL</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:HAL.Base.HAL.FreePort"></member>
    <member name="F:HAL.Base.HAL.GetControlWord"></member>
    <member name="F:HAL.Base.HAL.GetFPGAButton"></member>
    <member name="F:HAL.Base.HAL.GetFPGARevision"></member>
    <member name="F:HAL.Base.HAL.GetFPGATime"></member>
    <member name="F:HAL.Base.HAL.GetFPGAVersion"></member>
    <member name="F:HAL.Base.HAL.GetHALErrorMessage"></member>
    <member name="F:HAL.Base.HAL.GetPort"></member>
    <member name="F:HAL.Base.HAL.GetPortWithModule"></member>
    <member name="F:HAL.Base.HAL.HALGetAllianceStation"></member>
    <member name="F:HAL.Base.HAL.HALGetBrownedOut"></member>
    <member name="F:HAL.Base.HAL.HALGetJoystickAxes"></member>
    <member name="F:HAL.Base.HAL.HALGetJoystickAxisType"></member>
    <member name="F:HAL.Base.HAL.HALGetJoystickButtons"></member>
    <member name="F:HAL.Base.HAL.HALGetJoystickDescriptor"></member>
    <member name="F:HAL.Base.HAL.HALGetJoystickIsXbox"></member>
    <member name="F:HAL.Base.HAL.HALGetJoystickPOVs"></member>
    <member name="F:HAL.Base.HAL.HALGetJoystickType"></member>
    <member name="F:HAL.Base.HAL.HALGetMatchTime"></member>
    <member name="F:HAL.Base.HAL.HALGetSystemActive"></member>
    <member name="F:HAL.Base.HAL.HALInitialize"></member>
    <member name="F:HAL.Base.HAL.HALNetworkCommunicationObserveUserProgramAutonomous"></member>
    <member name="F:HAL.Base.HAL.HALNetworkCommunicationObserveUserProgramDisabled"></member>
    <member name="F:HAL.Base.HAL.HALNetworkCommunicationObserveUserProgramStarting"></member>
    <member name="F:HAL.Base.HAL.HALNetworkCommunicationObserveUserProgramTeleop"></member>
    <member name="F:HAL.Base.HAL.HALNetworkCommunicationObserveUserProgramTest"></member>
    <member name="F:HAL.Base.HAL.HALReport"></member>
    <member name="F:HAL.Base.HAL.HALSetErrorData"></member>
    <member name="F:HAL.Base.HAL.HALSetJoystickOutputs"></member>
    <member name="F:HAL.Base.HAL.HALSetNewDataSem"></member>
    <member name="F:HAL.Base.HAL.HALType"></member>
    <member name="M:HAL.Base.HAL.Initialize(System.Int32)">
      <summary>
            HAL Initialization. Must be called before any other HAL functions.
            </summary>
      <param name="mode">Initialization Mode</param>
    </member>
    <member name="M:HAL.Base.HAL.Report(HAL.Base.ResourceType,HAL.Base.Instances,System.Byte,System.String)"></member>
    <member name="M:HAL.Base.HAL.Report(HAL.Base.ResourceType,System.Byte,System.Byte,System.String)"></member>
    <member name="M:HAL.Base.HAL.Report(System.Byte,HAL.Base.Instances,System.Byte,System.String)"></member>
    <member name="M:HAL.Base.HAL.Report(System.Byte,System.Byte,System.Byte,System.String)"></member>
    <member name="T:HAL.Base.HAL.Constants">
      <summary>
            This contains all of the HAL Constants
            </summary>
    </member>
    <member name="M:HAL.Base.HAL.Constants.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Base.HAL.Constants</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:HAL.Base.HAL.Constants.SystemClockTicksPerMicrosecond"></member>
    <member name="T:HAL.Base.HAL.DriverStationConstants"></member>
    <member name="M:HAL.Base.HAL.DriverStationConstants.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Base.HAL.DriverStationConstants</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:HAL.Base.HAL.DriverStationConstants.JoystickPorts"></member>
    <member name="F:HAL.Base.HAL.DriverStationConstants.MaxJoystickAxes"></member>
    <member name="F:HAL.Base.HAL.DriverStationConstants.MaxJoystickPOVs"></member>
    <member name="T:HAL.Base.HAL.FreePortDelegate"></member>
    <member name="T:HAL.Base.HAL.GetFPGAButtonDelegate"></member>
    <member name="T:HAL.Base.HAL.GetFPGARevisionDelegate"></member>
    <member name="T:HAL.Base.HAL.GetFPGATimeDelegate"></member>
    <member name="T:HAL.Base.HAL.GetFPGAVersionDelegate"></member>
    <member name="T:HAL.Base.HAL.GetHALErrorMessageDelegate"></member>
    <member name="T:HAL.Base.HAL.GetPortDelegate"></member>
    <member name="T:HAL.Base.HAL.GetPortWithModuleDelegate"></member>
    <member name="T:HAL.Base.HAL.HALGetAllianceStationDelegate"></member>
    <member name="T:HAL.Base.HAL.HALGetBrownedOutDelegate"></member>
    <member name="T:HAL.Base.HAL.HALGetControlWordDelegate"></member>
    <member name="T:HAL.Base.HAL.HALGetJoystickAxesDelegate"></member>
    <member name="T:HAL.Base.HAL.HALGetJoystickAxisTypeDelegate"></member>
    <member name="T:HAL.Base.HAL.HALGetJoystickButtonsDelegate"></member>
    <member name="T:HAL.Base.HAL.HALGetJoystickDescriptorDelegate"></member>
    <member name="T:HAL.Base.HAL.HALGetJoystickIsXboxDelegate"></member>
    <member name="T:HAL.Base.HAL.HALGetJoystickPOVsDelegate"></member>
    <member name="T:HAL.Base.HAL.HALGetJoystickTypeDelegate"></member>
    <member name="T:HAL.Base.HAL.HALGetMatchTimeDelegate"></member>
    <member name="T:HAL.Base.HAL.HALGetSystemActiveDelegate"></member>
    <member name="T:HAL.Base.HAL.HALInitializeDelegate"></member>
    <member name="T:HAL.Base.HAL.HALNetworkCommunicationObserveUserProgramAutonomousDelegate"></member>
    <member name="T:HAL.Base.HAL.HALNetworkCommunicationObserveUserProgramDisabledDelegate"></member>
    <member name="T:HAL.Base.HAL.HALNetworkCommunicationObserveUserProgramStartingDelegate"></member>
    <member name="T:HAL.Base.HAL.HALNetworkCommunicationObserveUserProgramTeleopDelegate"></member>
    <member name="T:HAL.Base.HAL.HALNetworkCommunicationObserveUserProgramTestDelegate"></member>
    <member name="T:HAL.Base.HAL.HALReportDelegate"></member>
    <member name="T:HAL.Base.HAL.HALSetErrorDataDelegate"></member>
    <member name="T:HAL.Base.HAL.HALSetJoystickOutputsDelegate"></member>
    <member name="T:HAL.Base.HAL.HALSetNewDataSemDelegate"></member>
    <member name="T:HAL.Base.HAL.HALTypes"></member>
    <member name="F:HAL.Base.HAL.HALTypes.RoboRIO"></member>
    <member name="F:HAL.Base.HAL.HALTypes.Simulation"></member>
    <member name="F:HAL.Base.HAL.HALTypes.Other"></member>
    <member name="F:HAL.Base.HAL.HALTypes.None"></member>
    <member name="T:HAL.Base.HALAccelerometer"></member>
    <member name="M:HAL.Base.HALAccelerometer.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Base.HALAccelerometer</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:HAL.Base.HALAccelerometer.GetAccelerometerX"></member>
    <member name="F:HAL.Base.HALAccelerometer.GetAccelerometerY"></member>
    <member name="F:HAL.Base.HALAccelerometer.GetAccelerometerZ"></member>
    <member name="F:HAL.Base.HALAccelerometer.SetAccelerometerActive"></member>
    <member name="F:HAL.Base.HALAccelerometer.SetAccelerometerRange"></member>
    <member name="T:HAL.Base.HALAccelerometer.GetAccelerometerXDelegate"></member>
    <member name="T:HAL.Base.HALAccelerometer.GetAccelerometerYDelegate"></member>
    <member name="T:HAL.Base.HALAccelerometer.GetAccelerometerZDelegate"></member>
    <member name="T:HAL.Base.HALAccelerometer.SetAccelerometerActiveDelegate"></member>
    <member name="T:HAL.Base.HALAccelerometer.SetAccelerometerRangeDelegate"></member>
    <member name="T:HAL.Base.HALAccelerometerRange"></member>
    <member name="F:HAL.Base.HALAccelerometerRange.Range_2G"></member>
    <member name="F:HAL.Base.HALAccelerometerRange.Range_4G"></member>
    <member name="F:HAL.Base.HALAccelerometerRange.Range_8G"></member>
    <member name="T:HAL.Base.HALAllianceStationID">
      <summary></summary>
    </member>
    <member name="F:HAL.Base.HALAllianceStationID.HALAllianceStationID_red1">
      <summary>
            Red 1 Station
            </summary>
    </member>
    <member name="F:HAL.Base.HALAllianceStationID.HALAllianceStationID_red2">
      <summary>
            Red 2 Station
            </summary>
    </member>
    <member name="F:HAL.Base.HALAllianceStationID.HALAllianceStationID_red3">
      <summary>
            Red 3 Station
            </summary>
    </member>
    <member name="F:HAL.Base.HALAllianceStationID.HALAllianceStationID_blue1">
      <summary>
            Blue 1 Stations
            </summary>
    </member>
    <member name="F:HAL.Base.HALAllianceStationID.HALAllianceStationID_blue2">
      <summary>
            Blue 2 Stations
            </summary>
    </member>
    <member name="F:HAL.Base.HALAllianceStationID.HALAllianceStationID_blue3">
      <summary>
            Blue 3 Station
            </summary>
    </member>
    <member name="T:HAL.Base.HALAllowNonBlittable">
      <summary>
            This attributes are placed on strings we want to force be allowed in the impl test.
            </summary>
    </member>
    <member name="M:HAL.Base.HALAllowNonBlittable.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Base.HALAllowNonBlittable</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:HAL.Base.HALAnalog"></member>
    <member name="M:HAL.Base.HALAnalog.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Base.HALAnalog</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:HAL.Base.HALAnalog.CheckAnalogInputChannel"></member>
    <member name="F:HAL.Base.HALAnalog.CheckAnalogModule"></member>
    <member name="F:HAL.Base.HALAnalog.CheckAnalogOutputChannel"></member>
    <member name="F:HAL.Base.HALAnalog.CleanAnalogTrigger"></member>
    <member name="F:HAL.Base.HALAnalog.FreeAnalogInputPort"></member>
    <member name="F:HAL.Base.HALAnalog.FreeAnalogOutputPort"></member>
    <member name="F:HAL.Base.HALAnalog.GetAccumulatorCount"></member>
    <member name="F:HAL.Base.HALAnalog.GetAccumulatorOutput"></member>
    <member name="F:HAL.Base.HALAnalog.GetAccumulatorValue"></member>
    <member name="F:HAL.Base.HALAnalog.GetAnalogAverageBits"></member>
    <member name="F:HAL.Base.HALAnalog.GetAnalogAverageValue"></member>
    <member name="F:HAL.Base.HALAnalog.GetAnalogAverageVoltage"></member>
    <member name="F:HAL.Base.HALAnalog.GetAnalogLSBWeight"></member>
    <member name="F:HAL.Base.HALAnalog.GetAnalogOffset"></member>
    <member name="F:HAL.Base.HALAnalog.GetAnalogOutput"></member>
    <member name="F:HAL.Base.HALAnalog.GetAnalogOversampleBits"></member>
    <member name="F:HAL.Base.HALAnalog.GetAnalogSampleRate"></member>
    <member name="F:HAL.Base.HALAnalog.GetAnalogTriggerInWindow"></member>
    <member name="F:HAL.Base.HALAnalog.GetAnalogTriggerOutput"></member>
    <member name="F:HAL.Base.HALAnalog.GetAnalogTriggerTriggerState"></member>
    <member name="F:HAL.Base.HALAnalog.GetAnalogValue"></member>
    <member name="F:HAL.Base.HALAnalog.GetAnalogVoltage"></member>
    <member name="F:HAL.Base.HALAnalog.GetAnalogVoltsToValue"></member>
    <member name="F:HAL.Base.HALAnalog.InitAccumulator"></member>
    <member name="F:HAL.Base.HALAnalog.InitializeAnalogInputPort"></member>
    <member name="F:HAL.Base.HALAnalog.InitializeAnalogOutputPort"></member>
    <member name="F:HAL.Base.HALAnalog.InitializeAnalogTrigger"></member>
    <member name="F:HAL.Base.HALAnalog.IsAccumulatorChannel"></member>
    <member name="F:HAL.Base.HALAnalog.ResetAccumulator"></member>
    <member name="F:HAL.Base.HALAnalog.SetAccumulatorCenter"></member>
    <member name="F:HAL.Base.HALAnalog.SetAccumulatorDeadband"></member>
    <member name="F:HAL.Base.HALAnalog.SetAnalogAverageBits"></member>
    <member name="F:HAL.Base.HALAnalog.SetAnalogOutput"></member>
    <member name="F:HAL.Base.HALAnalog.SetAnalogOversampleBits"></member>
    <member name="F:HAL.Base.HALAnalog.SetAnalogSampleRate"></member>
    <member name="F:HAL.Base.HALAnalog.SetAnalogTriggerAveraged"></member>
    <member name="F:HAL.Base.HALAnalog.SetAnalogTriggerFiltered"></member>
    <member name="F:HAL.Base.HALAnalog.SetAnalogTriggerLimitsRaw"></member>
    <member name="F:HAL.Base.HALAnalog.SetAnalogTriggerLimitsVoltage"></member>
    <member name="T:HAL.Base.HALAnalog.CheckAnalogInputChannelDelegate"></member>
    <member name="T:HAL.Base.HALAnalog.CheckAnalogModuleDelegate"></member>
    <member name="T:HAL.Base.HALAnalog.CheckAnalogOutputChannelDelegate"></member>
    <member name="T:HAL.Base.HALAnalog.CleanAnalogTriggerDelegate"></member>
    <member name="T:HAL.Base.HALAnalog.FreeAnalogInputPortDelegate"></member>
    <member name="T:HAL.Base.HALAnalog.FreeAnalogOutputPortDelegate"></member>
    <member name="T:HAL.Base.HALAnalog.GetAccumulatorCountDelegate"></member>
    <member name="T:HAL.Base.HALAnalog.GetAccumulatorOutputDelegate"></member>
    <member name="T:HAL.Base.HALAnalog.GetAccumulatorValueDelegate"></member>
    <member name="T:HAL.Base.HALAnalog.GetAnalogAverageBitsDelegate"></member>
    <member name="T:HAL.Base.HALAnalog.GetAnalogAverageValueDelegate"></member>
    <member name="T:HAL.Base.HALAnalog.GetAnalogAverageVoltageDelegate"></member>
    <member name="T:HAL.Base.HALAnalog.GetAnalogLSBWeightDelegate"></member>
    <member name="T:HAL.Base.HALAnalog.GetAnalogOffsetDelegate"></member>
    <member name="T:HAL.Base.HALAnalog.GetAnalogOutputDelegate"></member>
    <member name="T:HAL.Base.HALAnalog.GetAnalogOversampleBitsDelegate"></member>
    <member name="T:HAL.Base.HALAnalog.GetAnalogSampleRateDelegate"></member>
    <member name="T:HAL.Base.HALAnalog.GetAnalogTriggerInWindowDelegate"></member>
    <member name="T:HAL.Base.HALAnalog.GetAnalogTriggerOutputDelegate"></member>
    <member name="T:HAL.Base.HALAnalog.GetAnalogTriggerTriggerStateDelegate"></member>
    <member name="T:HAL.Base.HALAnalog.GetAnalogValueDelegate"></member>
    <member name="T:HAL.Base.HALAnalog.GetAnalogVoltageDelegate"></member>
    <member name="T:HAL.Base.HALAnalog.GetAnalogVoltsToValueDelegate"></member>
    <member name="T:HAL.Base.HALAnalog.InitAccumulatorDelegate"></member>
    <member name="T:HAL.Base.HALAnalog.InitializeAnalogInputPortDelegate"></member>
    <member name="T:HAL.Base.HALAnalog.InitializeAnalogOutputPortDelegate"></member>
    <member name="T:HAL.Base.HALAnalog.InitializeAnalogTriggerDelegate"></member>
    <member name="T:HAL.Base.HALAnalog.IsAccumulatorChannelDelegate"></member>
    <member name="T:HAL.Base.HALAnalog.ResetAccumulatorDelegate"></member>
    <member name="T:HAL.Base.HALAnalog.SetAccumulatorCenterDelegate"></member>
    <member name="T:HAL.Base.HALAnalog.SetAccumulatorDeadbandDelegate"></member>
    <member name="T:HAL.Base.HALAnalog.SetAnalogAverageBitsDelegate"></member>
    <member name="T:HAL.Base.HALAnalog.SetAnalogOutputDelegate"></member>
    <member name="T:HAL.Base.HALAnalog.SetAnalogOversampleBitsDelegate"></member>
    <member name="T:HAL.Base.HALAnalog.SetAnalogSampleRateDelegate"></member>
    <member name="T:HAL.Base.HALAnalog.SetAnalogTriggerAveragedDelegate"></member>
    <member name="T:HAL.Base.HALAnalog.SetAnalogTriggerFilteredDelegate"></member>
    <member name="T:HAL.Base.HALAnalog.SetAnalogTriggerLimitsRawDelegate"></member>
    <member name="T:HAL.Base.HALAnalog.SetAnalogTriggerLimitsVoltageDelegate"></member>
    <member name="T:HAL.Base.HALCAN"></member>
    <member name="M:HAL.Base.HALCAN.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Base.HALCAN</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:HAL.Base.HALCAN.FRC_NetworkCommunication_CANSessionMux_closeStreamSession"></member>
    <member name="F:HAL.Base.HALCAN.FRC_NetworkCommunication_CANSessionMux_openStreamSession"></member>
    <member name="F:HAL.Base.HALCAN.FRC_NetworkCommunication_CANSessionMux_readStreamSession"></member>
    <member name="F:HAL.Base.HALCAN.FRC_NetworkCommunication_CANSessionMux_receiveMessage"></member>
    <member name="F:HAL.Base.HALCAN.FRC_NetworkCommunication_CANSessionMux_sendMessage"></member>
    <member name="T:HAL.Base.HALCAN.Constants"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_API_MC_ACK"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_API_MC_CFG"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_API_MC_ICTRL"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_API_MC_POS"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_API_MC_PSTAT"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_API_MC_SPD"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_API_MC_STATUS"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_API_MC_VCOMP"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_API_MC_VOLTAGE"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_IS_FRAME_11BIT"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_IS_FRAME_REMOTE"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_API_CLASS_M"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_API_DEVASSIGN"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_API_DEVQUERY"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_API_ENUMERATE"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_API_FIRMVER"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_API_HEARTBEAT"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_API_ID_M"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_API_M"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_API_S"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_API_SYNC"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_API_SYSHALT"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_API_SYSRESUME"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_API_SYSRST"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_API_UPDATE"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_DEVNO_BCAST"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_DEVNO_M"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_DEVNO_S"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_DTYPE_ACCEL"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_DTYPE_BCAST"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_DTYPE_GEART"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_DTYPE_GYRO"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_DTYPE_M"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_DTYPE_MOTOR"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_DTYPE_RELAY"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_DTYPE_ROBOT"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_DTYPE_S"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_DTYPE_UPDATE"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_DTYPE_USONIC"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_FULL_M"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_MFR_DEKA"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_MFR_LM"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_MFR_M"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_MFR_NI"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_MSGID_MFR_S"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_SEND_PERIOD_NO_REPEAT"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_SEND_PERIOD_STOP_REPEATING"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_STATUS_CODE_M"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_STATUS_CODE_S"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_STATUS_DTYPE_M"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_STATUS_DTYPE_S"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_STATUS_MFG_M"></member>
    <member name="F:HAL.Base.HALCAN.Constants.CAN_STATUS_MFG_S"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_ACK"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_CFG"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_CFG_BRAKE_COAST"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_CFG_ENC_LINES"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_CFG_FAULT_TIME"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_CFG_LIMIT_FWD"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_CFG_LIMIT_MODE"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_CFG_LIMIT_REV"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_CFG_MAX_VOUT"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_CFG_NUM_BRUSHES"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_CFG_POT_TURNS"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_HWVER"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_ICTRL"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_ICTRL_DC"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_ICTRL_DIS"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_ICTRL_EN"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_ICTRL_IC"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_ICTRL_PC"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_ICTRL_SET"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_ICTRL_SET_NO_ACK"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_ICTRL_T_EN"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_ICTRL_T_SET"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_ICTRL_T_SET_NO_ACK"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_POS"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_POS_DC"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_POS_DIS"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_POS_EN"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_POS_IC"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_POS_PC"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_POS_REF"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_POS_SET"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_POS_SET_NO_ACK"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_POS_T_EN"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_POS_T_SET"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_POS_T_SET_NO_ACK"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_PSTAT"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_PSTAT_CFG_S0"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_PSTAT_CFG_S1"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_PSTAT_CFG_S2"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_PSTAT_CFG_S3"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_PSTAT_DATA_S0"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_PSTAT_DATA_S1"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_PSTAT_DATA_S2"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_PSTAT_DATA_S3"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_PSTAT_PER_EN_S0"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_PSTAT_PER_EN_S1"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_PSTAT_PER_EN_S2"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_PSTAT_PER_EN_S3"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_SPD"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_SPD_DC"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_SPD_DIS"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_SPD_EN"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_SPD_IC"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_SPD_PC"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_SPD_REF"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_SPD_SET"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_SPD_SET_NO_ACK"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_SPD_T_EN"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_SPD_T_SET"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_SPD_T_SET_NO_ACK"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_STATUS"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_STATUS_CMODE"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_STATUS_CURRENT"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_STATUS_FAULT"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_STATUS_FLT_COUNT"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_STATUS_LIMIT"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_STATUS_POS"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_STATUS_POWER"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_STATUS_SPD"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_STATUS_STKY_FLT"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_STATUS_TEMP"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_STATUS_VOLTBUS"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_STATUS_VOLTOUT"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_STATUS_VOUT"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_SYNC_PEND_NOW"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_TRUST_EN"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_TRUST_HEARTBEAT"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_UNTRUST_EN"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_UPD"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_UPD_ACK"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_UPD_DOWNLOAD"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_UPD_PING"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_UPD_REQUEST"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_UPD_RESET"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_UPD_SEND_DATA"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_VCOMP"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_VCOMP_COMP_RAMP"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_VCOMP_DIS"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_VCOMP_EN"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_VCOMP_IN_RAMP"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_VCOMP_SET"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_VCOMP_SET_NO_ACK"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_VCOMP_T_EN"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_VCOMP_T_SET"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_VCOMP_T_SET_NO_ACK"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_VOLT"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_VOLT_DIS"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_VOLT_EN"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_VOLT_RAMP_DIS"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_VOLT_SET"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_VOLT_SET_NO_ACK"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_VOLT_SET_RAMP"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_VOLT_T_EN"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_VOLT_T_SET"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_API_VOLT_T_SET_NO_ACK"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_FAULT_COMM"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_FAULT_CURRENT"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_FAULT_GATE_DRIVE"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_FAULT_TEMP"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_FAULT_VBUS"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_HWVER_JAG_1_0"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_HWVER_JAG_2_0"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_HWVER_UNKNOWN"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_CANERR_B0"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_CANERR_B1"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_CANSTS"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_CURRENT_B0"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_CURRENT_B1"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_END"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_FAULT"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_FLT_COUNT_COMM"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_FLT_COUNT_CURRENT"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_FLT_COUNT_GATE"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_FLT_COUNT_TEMP"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_FLT_COUNT_VOLTBUS"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_LIMIT_CLR"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_LIMIT_NCLR"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_POS_B0"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_POS_B1"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_POS_B2"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_POS_B3"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_SPD_B0"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_SPD_B1"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_SPD_B2"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_SPD_B3"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_STKY_FLT_CLR"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_STKY_FLT_NCLR"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_TEMP_B0"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_TEMP_B1"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_VOLTBUS_B0"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_VOLTBUS_B1"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_VOLTOUT_B0"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_VOLTOUT_B1"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_VOUT_B0"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_PSTAT_VOUT_B1"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_REF_ENCODER"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_REF_INV_ENCODER"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_REF_NONE"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_REF_POT"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_REF_QUAD_ENCODER"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_STATUS_CMODE_CURRENT"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_STATUS_CMODE_POS"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_STATUS_CMODE_SPEED"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_STATUS_CMODE_VCOMP"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_STATUS_CMODE_VOLT"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_STATUS_FAULT_ILIMIT"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_STATUS_FAULT_TLIMIT"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_STATUS_FAULT_VLIMIT"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_STATUS_LIMIT_FWD"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_STATUS_LIMIT_REV"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_STATUS_LIMIT_SFWD"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_STATUS_LIMIT_SREV"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_STATUS_LIMIT_STKY_FWD"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_STATUS_LIMIT_STKY_REV"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_STATUS_LIMIT_STKY_SFWD"></member>
    <member name="F:HAL.Base.HALCAN.Constants.LM_STATUS_LIMIT_STKY_SREV"></member>
    <member name="T:HAL.Base.HALCAN.FRC_NetworkCommunication_CANSessionMux_closeStreamSessionDelegate"></member>
    <member name="T:HAL.Base.HALCAN.FRC_NetworkCommunication_CANSessionMux_openStreamSessionDelegate"></member>
    <member name="T:HAL.Base.HALCAN.FRC_NetworkCommunication_CANSessionMux_readStreamSessionDelegate"></member>
    <member name="T:HAL.Base.HALCAN.FRC_NetworkCommunication_CANSessionMux_receiveMessageDelegate"></member>
    <member name="T:HAL.Base.HALCAN.FRC_NetworkCommunication_CANSessionMux_sendMessageDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX"></member>
    <member name="M:HAL.Base.HALCanTalonSRX.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Base.HALCanTalonSRX</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_ChangeMotionControlFramePeriod"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_ClearMotionProfileTrajectories"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_ClearStickyFaults"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_Create3"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_Destroy"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetActTraj_IsLast"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetActTraj_IsValid"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetActTraj_Position"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetActTraj_ProfileSlotSelect"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetActTraj_Velocity"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetActTraj_VelOnly"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetAnalogInVel"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetAnalogInWithOv"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetAppliedThrottle"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetBatteryV"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetBrakeIsEnabled"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetBufferIsFull"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetCloseLoopErr"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetCloseLoopRampRate"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetCount"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetCurrent"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetDgain"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetEncIndexRiseEvents"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetEncPosition"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetEncVel"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetFault_ForLim"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetFault_ForSoftLim"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetFault_HardwareFailure"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetFault_OverTemp"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetFault_RevLim"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetFault_RevSoftLim"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetFault_UnderVoltage"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetFeedbackDeviceSelect"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetFgain"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetFirmVers"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetForwardSoftEnable"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetForwardSoftLimit"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetHasUnderrun"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetIgain"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetIsUnderrun"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetIzone"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetLimitSwitchClosedFor"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetLimitSwitchClosedRev"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetLimitSwitchEn"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetModeSelect"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetMotionProfileStatus"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetMotionProfileTopLevelBufferCount"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetNextID"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetOutputType"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetParamResponse"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetParamResponseInt32"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetPgain"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetPulseWidthPosition"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetPulseWidthRiseToFallUs"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetPulseWidthRiseToRiseUs"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetPulseWidthVelocity"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetQuadApin"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetQuadBpin"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetQuadIdxpin"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetResetCount"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetResetFlags"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetReverseSoftEnable"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetReverseSoftLimit"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetSensorPosition"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetSensorVelocity"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetStckyFault_ForLim"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetStckyFault_ForSoftLim"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetStckyFault_OverTemp"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetStckyFault_RevLim"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetStckyFault_RevSoftLim"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetStckyFault_UnderVoltage"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetTemp"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetVoltageCompensationRate"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_IsMotionProfileTopLevelBufferFull"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_IsPulseWidthSensorPresent"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_ProcessMotionProfileBuffer"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_PushMotionProfileTrajectory"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_RequestParam"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_Set"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_SetCloseLoopRampRate"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_SetDemand"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_SetDgain"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_SetFeedbackDeviceSelect"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_SetFgain"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_SetForwardSoftEnable"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_SetForwardSoftLimit"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_SetIgain"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_SetIzone"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_SetModeSelect"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_SetModeSelect2"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_SetOverrideBrakeType"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_SetOverrideLimitSwitchEn"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_SetParam"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_SetPgain"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_SetProfileSlotSelect"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_SetRampThrottle"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_SetReverseSoftEnable"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_SetReverseSoftLimit"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_SetRevFeedbackSensor"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_SetRevMotDuringCloseLoopEn"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_SetSensorPosition"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_SetStatusFrameRate"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.C_TalonSRX_SetVoltageCompensationRate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_ChangeMotionControlFramePeriodDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_ClearMotionProfileTrajectoriesDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_ClearStickyFaultsDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_Create3Delegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_DestroyDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetActTraj_IsLastDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetActTraj_IsValidDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetActTraj_PositionDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetActTraj_ProfileSlotSelectDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetActTraj_VelocityDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetActTraj_VelOnlyDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetAnalogInVelDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetAnalogInWithOvDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetAppliedThrottleDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetBatteryVDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetBrakeIsEnabledDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetBufferIsFullDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetCloseLoopErrDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetCloseLoopRampRateDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetCountDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetCurrentDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetDgainDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetEncIndexRiseEventsDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetEncPositionDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetEncVelDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetFault_ForLimDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetFault_ForSoftLimDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetFault_HardwareFailureDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetFault_OverTempDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetFault_RevLimDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetFault_RevSoftLimDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetFault_UnderVoltageDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetFeedbackDeviceSelectDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetFgainDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetFirmVersDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetForwardSoftEnableDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetForwardSoftLimitDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetHasUnderrunDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetIgainDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetIsUnderrunDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetIzoneDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetLimitSwitchClosedForDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetLimitSwitchClosedRevDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetLimitSwitchEnDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetModeSelectDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetMotionProfileStatusDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetMotionProfileTopLevelBufferCountDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetNextIDDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetOutputTypeDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetParamResponseDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetParamResponseInt32Delegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetPgainDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetPulseWidthPositionDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetPulseWidthRiseToFallUsDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetPulseWidthRiseToRiseUsDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetPulseWidthVelocityDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetQuadApinDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetQuadBpinDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetQuadIdxpinDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetResetCountDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetResetFlagsDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetReverseSoftEnableDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetReverseSoftLimitDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetSensorPositionDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetSensorVelocityDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetStckyFault_ForLimDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetStckyFault_ForSoftLimDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetStckyFault_OverTempDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetStckyFault_RevLimDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetStckyFault_RevSoftLimDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetStckyFault_UnderVoltageDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetTempDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_GetVoltageCompensationRateDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_IsMotionProfileTopLevelBufferFullDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_IsPulseWidthSensorPresentDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_ProcessMotionProfileBufferDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_PushMotionProfileTrajectoryDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_RequestParamDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_SetCloseLoopRampRateDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_SetDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_SetDemandDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_SetDgainDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_SetFeedbackDeviceSelectDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_SetFgainDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_SetForwardSoftEnableDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_SetForwardSoftLimitDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_SetIgainDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_SetIzoneDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_SetModeSelect2Delegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_SetModeSelectDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_SetOverrideBrakeTypeDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_SetOverrideLimitSwitchEnDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_SetParamDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_SetPgainDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_SetProfileSlotSelectDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_SetRampThrottleDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_SetReverseSoftEnableDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_SetReverseSoftLimitDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_SetRevFeedbackSensorDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_SetRevMotDuringCloseLoopEnDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_SetSensorPositionDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_SetStatusFrameRateDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.C_TalonSRX_SetVoltageCompensationRateDelegate"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.Constants"></member>
    <member name="M:HAL.Base.HALCanTalonSRX.Constants.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Base.HALCanTalonSRX.Constants</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:HAL.Base.HALCanTalonSRX.Constants.kBrakeOverride_OverrideBrake"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.Constants.kBrakeOverride_OverrideCoast"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.Constants.kBrakeOverride_UseDefaultsFromFlash"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.Constants.kDefaultControlPeriodMs"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.Constants.kFeedbackDev_AnalogEncoder"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.Constants.kFeedbackDev_AnalogPot"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.Constants.kFeedbackDev_CountEveryFallingEdge"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.Constants.kFeedbackDev_CountEveryRisingEdge"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.Constants.kFeedbackDev_DigitalQuadEnc"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.Constants.kFeedbackDev_PosIsPulseWidth"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.Constants.kLimitSwitchOverride_DisableFwd_DisableRev"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.Constants.kLimitSwitchOverride_DisableFwd_EnableRev"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.Constants.kLimitSwitchOverride_EnableFwd_DisableRev"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.Constants.kLimitSwitchOverride_EnableFwd_EnableRev"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.Constants.kLimitSwitchOverride_UseDefaultsFromFlash"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.Constants.kMode_CurrentCloseLoop"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.Constants.kMode_DutyCycle"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.Constants.kMode_NoDrive"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.Constants.kMode_PositionCloseLoop"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.Constants.kMode_SlaveFollower"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.Constants.kMode_VelocityCloseLoop"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.Constants.kMode_VoltCompen"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.Constants.kMotionProfileFlag_ActTraj_IsLast"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.Constants.kMotionProfileFlag_ActTraj_IsValid"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.Constants.kMotionProfileFlag_ActTraj_VelOnly"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.Constants.kMotionProfileFlag_HasUnderrun"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.Constants.kMotionProfileFlag_IsUnderrun"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.Constants.kProfileSlotSelect_Slot0"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.Constants.kProfileSlotSelect_Slot1"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.Constants.kStatusFrame_AnalogTempVbat"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.Constants.kStatusFrame_Encoder"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.Constants.kStatusFrame_Feedback"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.Constants.kStatusFrame_General"></member>
    <member name="T:HAL.Base.HALCanTalonSRX.ParamID"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eProfileParamSlot0_P"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eProfileParamSlot0_I"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eProfileParamSlot0_D"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eProfileParamSlot0_F"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eProfileParamSlot0_IZone"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eProfileParamSlot0_CloseLoopRampRate"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eProfileParamSlot1_P"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eProfileParamSlot1_I"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eProfileParamSlot1_D"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eProfileParamSlot1_F"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eProfileParamSlot1_IZone"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eProfileParamSlot1_CloseLoopRampRate"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eProfileParamSoftLimitForThreshold"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eProfileParamSoftLimitRevThreshold"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eProfileParamSoftLimitForEnable"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eProfileParamSoftLimitRevEnable"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eOnBoot_BrakeMode"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eOnBoot_LimitSwitch_Forward_NormallyClosed"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eOnBoot_LimitSwitch_Reverse_NormallyClosed"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eOnBoot_LimitSwitch_Forward_Disable"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eOnBoot_LimitSwitch_Reverse_Disable"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eFault_OverTemp"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eFault_UnderVoltage"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eFault_ForLim"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eFault_RevLim"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eFault_HardwareFailure"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eFault_ForSoftLim"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eFault_RevSoftLim"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eStckyFault_OverTemp"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eStckyFault_UnderVoltage"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eStckyFault_ForLim"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eStckyFault_RevLim"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eStckyFault_ForSoftLim"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eStckyFault_RevSoftLim"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eAppliedThrottle"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eCloseLoopErr"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eFeedbackDeviceSelect"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eRevMotDuringCloseLoopEn"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eModeSelect"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eProfileSlotSelect"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eRampThrottle"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eRevFeedbackSensor"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eLimitSwitchEn"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eLimitSwitchClosedFor"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eLimitSwitchClosedRev"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eSensorPosition"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eSensorVelocity"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eCurrent"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eBrakeIsEnabled"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eEncPosition"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eEncVel"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eEncIndexRiseEvents"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eQuadApin"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eQuadBpin"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eQuadIdxpin"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eAnalogInWithOv"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eAnalogInVel"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eTemp"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eBatteryV"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eResetCount"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eResetFlags"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eFirmVers"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eSettingsChanged"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eQuadFilterEn"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.ePidIaccum"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eStatus1FrameRate"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eStatus2FrameRate"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eStatus3FrameRate"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eStatus4FrameRate"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eStatus6FrameRate"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eStatus7FrameRate"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eClearPositionOnIdx"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.ePeakPosOutput"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eNominalPosOutput"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.ePeakNegOutput"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eNominalNegOutput"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eQuadIdxPolarity"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eStatus8FrameRate"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eAllowPosOverflow"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eProfileParamSlot0_AllowableClosedLoopErr"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eNumberPotTurns"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eNumberEncoderCPR"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.ePwdPosition"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eAinPosition"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eProfileParamVcompRate"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eProfileParamSlot1_AllowableClosedLoopErr"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eStatus9FrameRate"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eMotionProfileHasUnderrunErr"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eReserved120"></member>
    <member name="F:HAL.Base.HALCanTalonSRX.ParamID.eLegacyControlMode"></member>
    <member name="T:HAL.Base.HALCompressor"></member>
    <member name="M:HAL.Base.HALCompressor.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Base.HALCompressor</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:HAL.Base.HALCompressor.CheckCompressorModule"></member>
    <member name="F:HAL.Base.HALCompressor.ClearAllPCMStickyFaults"></member>
    <member name="F:HAL.Base.HALCompressor.GetClosedLoopControl"></member>
    <member name="F:HAL.Base.HALCompressor.GetCompressor"></member>
    <member name="F:HAL.Base.HALCompressor.GetCompressorCurrent"></member>
    <member name="F:HAL.Base.HALCompressor.GetCompressorCurrentTooHighFault"></member>
    <member name="F:HAL.Base.HALCompressor.GetCompressorCurrentTooHighStickyFault"></member>
    <member name="F:HAL.Base.HALCompressor.GetCompressorNotConnectedFault"></member>
    <member name="F:HAL.Base.HALCompressor.GetCompressorNotConnectedStickyFault"></member>
    <member name="F:HAL.Base.HALCompressor.GetCompressorShortedFault"></member>
    <member name="F:HAL.Base.HALCompressor.GetCompressorShortedStickyFault"></member>
    <member name="F:HAL.Base.HALCompressor.GetPressureSwitch"></member>
    <member name="F:HAL.Base.HALCompressor.InitializeCompressor"></member>
    <member name="F:HAL.Base.HALCompressor.SetClosedLoopControl"></member>
    <member name="T:HAL.Base.HALCompressor.CheckCompressorModuleDelegate"></member>
    <member name="T:HAL.Base.HALCompressor.ClearAllPCMStickyFaultsDelegate"></member>
    <member name="T:HAL.Base.HALCompressor.Constants"></member>
    <member name="M:HAL.Base.HALCompressor.Constants.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Base.HALCompressor.Constants</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:HAL.Base.HALCompressor.GetClosedLoopControlDelegate"></member>
    <member name="T:HAL.Base.HALCompressor.GetCompressorCurrentDelegate"></member>
    <member name="T:HAL.Base.HALCompressor.GetCompressorCurrentTooHighFaultDelegate"></member>
    <member name="T:HAL.Base.HALCompressor.GetCompressorCurrentTooHighStickyFaultDelegate"></member>
    <member name="T:HAL.Base.HALCompressor.GetCompressorDelegate"></member>
    <member name="T:HAL.Base.HALCompressor.GetCompressorNotConnectedFaultDelegate"></member>
    <member name="T:HAL.Base.HALCompressor.GetCompressorNotConnectedStickyFaultDelegate"></member>
    <member name="T:HAL.Base.HALCompressor.GetCompressorShortedFaultDelegate"></member>
    <member name="T:HAL.Base.HALCompressor.GetCompressorShortedStickyFaultDelegate"></member>
    <member name="T:HAL.Base.HALCompressor.GetPressureSwitchDelegate"></member>
    <member name="T:HAL.Base.HALCompressor.InitializeCompressorDelegate"></member>
    <member name="T:HAL.Base.HALCompressor.SetClosedLoopControlDelegate"></member>
    <member name="T:HAL.Base.HALControlWord"></member>
    <member name="M:HAL.Base.HALControlWord.#ctor(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Base.HALControlWord</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:HAL.Base.HALControlWord.GetAutonomous"></member>
    <member name="M:HAL.Base.HALControlWord.GetDSAttached"></member>
    <member name="M:HAL.Base.HALControlWord.GetEnabled"></member>
    <member name="M:HAL.Base.HALControlWord.GetEStop"></member>
    <member name="M:HAL.Base.HALControlWord.GetFMSAttached"></member>
    <member name="M:HAL.Base.HALControlWord.GetTest"></member>
    <member name="T:HAL.Base.HALDigital"></member>
    <member name="M:HAL.Base.HALDigital.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Base.HALDigital</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:HAL.Base.HALDigital.AllocateDIO"></member>
    <member name="F:HAL.Base.HALDigital.AllocatePWM"></member>
    <member name="F:HAL.Base.HALDigital.AllocatePWMChannel"></member>
    <member name="F:HAL.Base.HALDigital.CheckPWMChannel"></member>
    <member name="F:HAL.Base.HALDigital.CheckRelayChannel"></member>
    <member name="F:HAL.Base.HALDigital.ClearCounterDownSource"></member>
    <member name="F:HAL.Base.HALDigital.ClearCounterUpSource"></member>
    <member name="F:HAL.Base.HALDigital.FreeCounter"></member>
    <member name="F:HAL.Base.HALDigital.FreeDigitalPort"></member>
    <member name="F:HAL.Base.HALDigital.FreeDIO"></member>
    <member name="F:HAL.Base.HALDigital.FreeEncoder"></member>
    <member name="F:HAL.Base.HALDigital.FreePWM"></member>
    <member name="F:HAL.Base.HALDigital.FreePWMChannel"></member>
    <member name="F:HAL.Base.HALDigital.GetCounter"></member>
    <member name="F:HAL.Base.HALDigital.GetCounterDirection"></member>
    <member name="F:HAL.Base.HALDigital.GetCounterPeriod"></member>
    <member name="F:HAL.Base.HALDigital.GetCounterSamplesToAverage"></member>
    <member name="F:HAL.Base.HALDigital.GetCounterStopped"></member>
    <member name="F:HAL.Base.HALDigital.GetDIO"></member>
    <member name="F:HAL.Base.HALDigital.GetDIODirection"></member>
    <member name="F:HAL.Base.HALDigital.GetEncoder"></member>
    <member name="F:HAL.Base.HALDigital.GetEncoderDirection"></member>
    <member name="F:HAL.Base.HALDigital.GetEncoderPeriod"></member>
    <member name="F:HAL.Base.HALDigital.GetEncoderSamplesToAverage"></member>
    <member name="F:HAL.Base.HALDigital.GetEncoderStopped"></member>
    <member name="F:HAL.Base.HALDigital.GetFilterPeriod"></member>
    <member name="F:HAL.Base.HALDigital.GetFilterSelect"></member>
    <member name="F:HAL.Base.HALDigital.GetLoopTiming"></member>
    <member name="F:HAL.Base.HALDigital.GetPWM"></member>
    <member name="F:HAL.Base.HALDigital.GetRelayForward"></member>
    <member name="F:HAL.Base.HALDigital.GetRelayReverse"></member>
    <member name="F:HAL.Base.HALDigital.I2CClose"></member>
    <member name="F:HAL.Base.HALDigital.I2CInitialize"></member>
    <member name="F:HAL.Base.HALDigital.I2CRead"></member>
    <member name="F:HAL.Base.HALDigital.I2CTransaction"></member>
    <member name="F:HAL.Base.HALDigital.I2CWrite"></member>
    <member name="F:HAL.Base.HALDigital.InitializeCounter"></member>
    <member name="F:HAL.Base.HALDigital.InitializeDigitalPort"></member>
    <member name="F:HAL.Base.HALDigital.InitializeEncoder"></member>
    <member name="F:HAL.Base.HALDigital.IsAnyPulsing"></member>
    <member name="F:HAL.Base.HALDigital.IsPulsing"></member>
    <member name="F:HAL.Base.HALDigital.LatchPWMZero"></member>
    <member name="F:HAL.Base.HALDigital.Pulse"></member>
    <member name="F:HAL.Base.HALDigital.ResetCounter"></member>
    <member name="F:HAL.Base.HALDigital.ResetEncoder"></member>
    <member name="F:HAL.Base.HALDigital.SetCounterAverageSize"></member>
    <member name="F:HAL.Base.HALDigital.SetCounterDownSource"></member>
    <member name="F:HAL.Base.HALDigital.SetCounterDownSourceEdge"></member>
    <member name="F:HAL.Base.HALDigital.SetCounterExternalDirectionMode"></member>
    <member name="F:HAL.Base.HALDigital.SetCounterMaxPeriod"></member>
    <member name="F:HAL.Base.HALDigital.SetCounterPulseLengthMode"></member>
    <member name="F:HAL.Base.HALDigital.SetCounterReverseDirection"></member>
    <member name="F:HAL.Base.HALDigital.SetCounterSamplesToAverage"></member>
    <member name="F:HAL.Base.HALDigital.SetCounterSemiPeriodMode"></member>
    <member name="F:HAL.Base.HALDigital.SetCounterUpdateWhenEmpty"></member>
    <member name="F:HAL.Base.HALDigital.SetCounterUpDownMode"></member>
    <member name="F:HAL.Base.HALDigital.SetCounterUpSource"></member>
    <member name="F:HAL.Base.HALDigital.SetCounterUpSourceEdge"></member>
    <member name="F:HAL.Base.HALDigital.SetDIO"></member>
    <member name="F:HAL.Base.HALDigital.SetEncoderIndexSource"></member>
    <member name="F:HAL.Base.HALDigital.SetEncoderMaxPeriod"></member>
    <member name="F:HAL.Base.HALDigital.SetEncoderReverseDirection"></member>
    <member name="F:HAL.Base.HALDigital.SetEncoderSamplesToAverage"></member>
    <member name="F:HAL.Base.HALDigital.SetFilterPeriod"></member>
    <member name="F:HAL.Base.HALDigital.SetFilterSelect"></member>
    <member name="F:HAL.Base.HALDigital.SetPWM"></member>
    <member name="F:HAL.Base.HALDigital.SetPWMDutyCycle"></member>
    <member name="F:HAL.Base.HALDigital.SetPWMOutputChannel"></member>
    <member name="F:HAL.Base.HALDigital.SetPWMPeriodScale"></member>
    <member name="F:HAL.Base.HALDigital.SetPWMRate"></member>
    <member name="F:HAL.Base.HALDigital.SetRelayForward"></member>
    <member name="F:HAL.Base.HALDigital.SetRelayReverse"></member>
    <member name="F:HAL.Base.HALDigital.SpiClose"></member>
    <member name="F:HAL.Base.HALDigital.SpiFreeAccumulator"></member>
    <member name="F:HAL.Base.HALDigital.SpiGetAccumulatorAverage"></member>
    <member name="F:HAL.Base.HALDigital.SpiGetAccumulatorCount"></member>
    <member name="F:HAL.Base.HALDigital.SpiGetAccumulatorLastValue"></member>
    <member name="F:HAL.Base.HALDigital.SpiGetAccumulatorOutput"></member>
    <member name="F:HAL.Base.HALDigital.SpiGetAccumulatorValue"></member>
    <member name="F:HAL.Base.HALDigital.SpiGetHandle"></member>
    <member name="F:HAL.Base.HALDigital.SpiInitAccumulator"></member>
    <member name="F:HAL.Base.HALDigital.SpiInitialize"></member>
    <member name="F:HAL.Base.HALDigital.SpiRead"></member>
    <member name="F:HAL.Base.HALDigital.SpiResetAccumulator"></member>
    <member name="F:HAL.Base.HALDigital.SpiSetAccumulatorCenter"></member>
    <member name="F:HAL.Base.HALDigital.SpiSetAccumulatorDeadband"></member>
    <member name="F:HAL.Base.HALDigital.SpiSetChipSelectActiveHigh"></member>
    <member name="F:HAL.Base.HALDigital.SpiSetChipSelectActiveLow"></member>
    <member name="F:HAL.Base.HALDigital.SpiSetHandle"></member>
    <member name="F:HAL.Base.HALDigital.SpiSetOpts"></member>
    <member name="F:HAL.Base.HALDigital.SpiSetSpeed"></member>
    <member name="F:HAL.Base.HALDigital.SpiTransaction"></member>
    <member name="F:HAL.Base.HALDigital.SpiWrite"></member>
    <member name="T:HAL.Base.HALDigital.AllocateDIODelegate"></member>
    <member name="T:HAL.Base.HALDigital.AllocatePWMChannelDelegate"></member>
    <member name="T:HAL.Base.HALDigital.AllocatePWMDelegate"></member>
    <member name="T:HAL.Base.HALDigital.CheckPWMChannelDelegate"></member>
    <member name="T:HAL.Base.HALDigital.CheckRelayChannelDelegate"></member>
    <member name="T:HAL.Base.HALDigital.ClearCounterDownSourceDelegate"></member>
    <member name="T:HAL.Base.HALDigital.ClearCounterUpSourceDelegate"></member>
    <member name="T:HAL.Base.HALDigital.Constants"></member>
    <member name="M:HAL.Base.HALDigital.Constants.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Base.HALDigital.Constants</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:HAL.Base.HALDigital.FreeCounterDelegate"></member>
    <member name="T:HAL.Base.HALDigital.FreeDigitalPortDelegate"></member>
    <member name="T:HAL.Base.HALDigital.FreeDIODelegate"></member>
    <member name="T:HAL.Base.HALDigital.FreeEncoderDelegate"></member>
    <member name="T:HAL.Base.HALDigital.FreePWMChannelDelegate"></member>
    <member name="T:HAL.Base.HALDigital.FreePWMDelegate"></member>
    <member name="T:HAL.Base.HALDigital.GetCounterDelegate"></member>
    <member name="T:HAL.Base.HALDigital.GetCounterDirectionDelegate"></member>
    <member name="T:HAL.Base.HALDigital.GetCounterPeriodDelegate"></member>
    <member name="T:HAL.Base.HALDigital.GetCounterSamplesToAverageDelegate"></member>
    <member name="T:HAL.Base.HALDigital.GetCounterStoppedDelegate"></member>
    <member name="T:HAL.Base.HALDigital.GetDIODelegate"></member>
    <member name="T:HAL.Base.HALDigital.GetDIODirectionDelegate"></member>
    <member name="T:HAL.Base.HALDigital.GetEncoderDelegate"></member>
    <member name="T:HAL.Base.HALDigital.GetEncoderDirectionDelegate"></member>
    <member name="T:HAL.Base.HALDigital.GetEncoderPeriodDelegate"></member>
    <member name="T:HAL.Base.HALDigital.GetEncoderSamplesToAverageDelegate"></member>
    <member name="T:HAL.Base.HALDigital.GetEncoderStoppedDelegate"></member>
    <member name="T:HAL.Base.HALDigital.GetFilterPeriodDelegate"></member>
    <member name="T:HAL.Base.HALDigital.GetFilterSelectDelegate"></member>
    <member name="T:HAL.Base.HALDigital.GetLoopTimingDelegate"></member>
    <member name="T:HAL.Base.HALDigital.GetPWMDelegate"></member>
    <member name="T:HAL.Base.HALDigital.GetRelayForwardDelegate"></member>
    <member name="T:HAL.Base.HALDigital.GetRelayReverseDelegate"></member>
    <member name="T:HAL.Base.HALDigital.I2CCloseDelegate"></member>
    <member name="T:HAL.Base.HALDigital.I2CInitializeDelegate"></member>
    <member name="T:HAL.Base.HALDigital.I2CReadDelegate"></member>
    <member name="T:HAL.Base.HALDigital.I2CTransactionDelegate"></member>
    <member name="T:HAL.Base.HALDigital.I2CWriteDelegate"></member>
    <member name="T:HAL.Base.HALDigital.InitializeCounterDelegate"></member>
    <member name="T:HAL.Base.HALDigital.InitializeDigitalPortDelegate"></member>
    <member name="T:HAL.Base.HALDigital.InitializeEncoderDelegate"></member>
    <member name="T:HAL.Base.HALDigital.IsAnyPulsingDelegate"></member>
    <member name="T:HAL.Base.HALDigital.IsPulsingDelegate"></member>
    <member name="T:HAL.Base.HALDigital.LatchPWMZeroDelegate"></member>
    <member name="T:HAL.Base.HALDigital.PulseDelegate"></member>
    <member name="T:HAL.Base.HALDigital.ResetCounterDelegate"></member>
    <member name="T:HAL.Base.HALDigital.ResetEncoderDelegate"></member>
    <member name="T:HAL.Base.HALDigital.SetCounterAverageSizeDelegate"></member>
    <member name="T:HAL.Base.HALDigital.SetCounterDownSourceDelegate"></member>
    <member name="T:HAL.Base.HALDigital.SetCounterDownSourceEdgeDelegate"></member>
    <member name="T:HAL.Base.HALDigital.SetCounterExternalDirectionModeDelegate"></member>
    <member name="T:HAL.Base.HALDigital.SetCounterMaxPeriodDelegate"></member>
    <member name="T:HAL.Base.HALDigital.SetCounterPulseLengthModeDelegate"></member>
    <member name="T:HAL.Base.HALDigital.SetCounterReverseDirectionDelegate"></member>
    <member name="T:HAL.Base.HALDigital.SetCounterSamplesToAverageDelegate"></member>
    <member name="T:HAL.Base.HALDigital.SetCounterSemiPeriodModeDelegate"></member>
    <member name="T:HAL.Base.HALDigital.SetCounterUpdateWhenEmptyDelegate"></member>
    <member name="T:HAL.Base.HALDigital.SetCounterUpDownModeDelegate"></member>
    <member name="T:HAL.Base.HALDigital.SetCounterUpSourceDelegate"></member>
    <member name="T:HAL.Base.HALDigital.SetCounterUpSourceEdgeDelegate"></member>
    <member name="T:HAL.Base.HALDigital.SetDIODelegate"></member>
    <member name="T:HAL.Base.HALDigital.SetEncoderIndexSourceDelegate"></member>
    <member name="T:HAL.Base.HALDigital.SetEncoderMaxPeriodDelegate"></member>
    <member name="T:HAL.Base.HALDigital.SetEncoderReverseDirectionDelegate"></member>
    <member name="T:HAL.Base.HALDigital.SetEncoderSamplesToAverageDelegate"></member>
    <member name="T:HAL.Base.HALDigital.SetFilterPeriodDelegate"></member>
    <member name="T:HAL.Base.HALDigital.SetFilterSelectDelegate"></member>
    <member name="T:HAL.Base.HALDigital.SetPWMDelegate"></member>
    <member name="T:HAL.Base.HALDigital.SetPWMDutyCycleDelegate"></member>
    <member name="T:HAL.Base.HALDigital.SetPWMOutputChannelDelegate"></member>
    <member name="T:HAL.Base.HALDigital.SetPWMPeriodScaleDelegate"></member>
    <member name="T:HAL.Base.HALDigital.SetPWMRateDelegate"></member>
    <member name="T:HAL.Base.HALDigital.SetRelayForwardDelegate"></member>
    <member name="T:HAL.Base.HALDigital.SetRelayReverseDelegate"></member>
    <member name="T:HAL.Base.HALDigital.SpiCloseDelegate"></member>
    <member name="T:HAL.Base.HALDigital.SpiFreeAccumulatorDelegate"></member>
    <member name="T:HAL.Base.HALDigital.SpiGetAccumulatorAverageDelegate"></member>
    <member name="T:HAL.Base.HALDigital.SpiGetAccumulatorCountDelegate"></member>
    <member name="T:HAL.Base.HALDigital.SpiGetAccumulatorLastValueDelegate"></member>
    <member name="T:HAL.Base.HALDigital.SpiGetAccumulatorOutputDelegate"></member>
    <member name="T:HAL.Base.HALDigital.SpiGetAccumulatorValueDelegate"></member>
    <member name="T:HAL.Base.HALDigital.SpiGetHandleDelegate"></member>
    <member name="T:HAL.Base.HALDigital.SpiInitAccumulatorDelegate"></member>
    <member name="T:HAL.Base.HALDigital.SpiInitializeDelegate"></member>
    <member name="T:HAL.Base.HALDigital.SpiReadDelegate"></member>
    <member name="T:HAL.Base.HALDigital.SpiResetAccumulatorDelegate"></member>
    <member name="T:HAL.Base.HALDigital.SpiSetAccumulatorCenterDelegate"></member>
    <member name="T:HAL.Base.HALDigital.SpiSetAccumulatorDeadbandDelegate"></member>
    <member name="T:HAL.Base.HALDigital.SpiSetChipSelectActiveHighDelegate"></member>
    <member name="T:HAL.Base.HALDigital.SpiSetChipSelectActiveLowDelegate"></member>
    <member name="T:HAL.Base.HALDigital.SpiSetHandleDelegate"></member>
    <member name="T:HAL.Base.HALDigital.SpiSetOptsDelegate"></member>
    <member name="T:HAL.Base.HALDigital.SpiSetSpeedDelegate"></member>
    <member name="T:HAL.Base.HALDigital.SpiTransactionDelegate"></member>
    <member name="T:HAL.Base.HALDigital.SpiWriteDelegate"></member>
    <member name="T:HAL.Base.HALErrors"></member>
    <member name="M:HAL.Base.HALErrors.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Base.HALErrors</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:HAL.Base.HALErrors.ANALOG_TRIGGER_LIMIT_ORDER_ERROR"></member>
    <member name="F:HAL.Base.HALErrors.ANALOG_TRIGGER_LIMIT_ORDER_ERROR_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.ANALOG_TRIGGER_PULSE_OUTPUT_ERROR"></member>
    <member name="F:HAL.Base.HALErrors.ANALOG_TRIGGER_PULSE_OUTPUT_ERROR_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.CTR_InvalidParamValue_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.CTR_RxTimeout_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.CTR_SigNotUpdated_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.CTR_TxFailed_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.CTR_TxTimeout_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.CTR_UnexpectedArbId_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.ERR_CANSessionMux_InvalidBuffer_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.ERR_CANSessionMux_MessageNotFound_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.ERR_CANSessionMux_NotAllowed_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.ERR_CANSessionMux_NotInitialized_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.INCOMPATIBLE_STATE"></member>
    <member name="F:HAL.Base.HALErrors.INCOMPATIBLE_STATE_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.LOOP_TIMING_ERROR"></member>
    <member name="F:HAL.Base.HALErrors.LOOP_TIMING_ERROR_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.NiFpga_Status_FifoTimeout_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.NiFpga_Status_HardwareFault_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.NiFpga_Status_InvalidParameter_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.NiFpga_Status_IrqTimeout_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.NiFpga_Status_MemoryFull_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.NiFpga_Status_ResourceNotFound_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.NiFpga_Status_ResourceNotInitialized_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.NiFpga_Status_SoftwareFault_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.NiFpga_Status_TransferAborted_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.NO_AVAILABLE_RESOURCES"></member>
    <member name="F:HAL.Base.HALErrors.NO_AVAILABLE_RESOURCES_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.NULL_PARAMETER"></member>
    <member name="F:HAL.Base.HALErrors.NULL_PARAMETER_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.PARAMETER_OUT_OF_RANGE"></member>
    <member name="F:HAL.Base.HALErrors.PARAMETER_OUT_OF_RANGE_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.RESOURCE_IS_ALLOCATED"></member>
    <member name="F:HAL.Base.HALErrors.RESOURCE_IS_ALLOCATED_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.SAMPLE_RATE_TOO_HIGH"></member>
    <member name="F:HAL.Base.HALErrors.SAMPLE_RATE_TOO_HIGH_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.SPI_READ_NO_DATA"></member>
    <member name="F:HAL.Base.HALErrors.SPI_READ_NO_DATA_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.SPI_READ_NO_MISO"></member>
    <member name="F:HAL.Base.HALErrors.SPI_READ_NO_MISO_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.SPI_WRITE_NO_MOSI"></member>
    <member name="F:HAL.Base.HALErrors.SPI_WRITE_NO_MOSI_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.VI_ERROR_ASRL_FRAMING_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.VI_ERROR_ASRL_OVERRUN_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.VI_ERROR_ASRL_PARITY_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.VI_ERROR_INV_OBJECT_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.VI_ERROR_INV_PARAMETER_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.VI_ERROR_INV_RSRC_NAME_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.VI_ERROR_IO_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.VI_ERROR_QUEUE_OVERFLOW_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.VI_ERROR_RSRC_BUSY_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.VI_ERROR_RSRC_LOCKED_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.VI_ERROR_RSRC_NFOUND_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.VI_ERROR_SYSTEM_ERROR_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.VOLTAGE_OUT_OF_RANGE"></member>
    <member name="F:HAL.Base.HALErrors.VOLTAGE_OUT_OF_RANGE_MESSAGE"></member>
    <member name="F:HAL.Base.HALErrors.WARN_CANSessionMux_NoToken_MESSAGE"></member>
    <member name="T:HAL.Base.HALInterrupts"></member>
    <member name="M:HAL.Base.HALInterrupts.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Base.HALInterrupts</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:HAL.Base.HALInterrupts.AttachInterruptHandler"></member>
    <member name="F:HAL.Base.HALInterrupts.CleanInterrupts"></member>
    <member name="F:HAL.Base.HALInterrupts.DisableInterrupts"></member>
    <member name="F:HAL.Base.HALInterrupts.EnableInterrupts"></member>
    <member name="F:HAL.Base.HALInterrupts.InitializeInterrupts"></member>
    <member name="F:HAL.Base.HALInterrupts.ReadFallingTimestamp"></member>
    <member name="F:HAL.Base.HALInterrupts.ReadRisingTimestamp"></member>
    <member name="F:HAL.Base.HALInterrupts.RequestInterrupts"></member>
    <member name="F:HAL.Base.HALInterrupts.SetInterruptUpSourceEdge"></member>
    <member name="F:HAL.Base.HALInterrupts.WaitForInterrupt"></member>
    <member name="T:HAL.Base.HALInterrupts.AttachInterruptHandlerDelegate"></member>
    <member name="T:HAL.Base.HALInterrupts.CleanInterruptsDelegate"></member>
    <member name="T:HAL.Base.HALInterrupts.DisableInterruptsDelegate"></member>
    <member name="T:HAL.Base.HALInterrupts.EnableInterruptsDelegate"></member>
    <member name="T:HAL.Base.HALInterrupts.InitializeInterruptsDelegate"></member>
    <member name="T:HAL.Base.HALInterrupts.ReadFallingTimestampDelegate"></member>
    <member name="T:HAL.Base.HALInterrupts.ReadRisingTimestampDelegate"></member>
    <member name="T:HAL.Base.HALInterrupts.RequestInterruptsDelegate"></member>
    <member name="T:HAL.Base.HALInterrupts.SetInterruptUpSourceEdgeDelegate"></member>
    <member name="T:HAL.Base.HALInterrupts.WaitForInterruptDelegate"></member>
    <member name="T:HAL.Base.HALJoystickAxes">
      <summary>
            Joystick Axes Struct
            </summary>
    </member>
    <member name="F:HAL.Base.HALJoystickAxes.axes"></member>
    <member name="F:HAL.Base.HALJoystickAxes.count"></member>
    <member name="T:HAL.Base.HALJoystickAxesArray"></member>
    <member name="F:HAL.Base.HALJoystickAxesArray.axes0"></member>
    <member name="F:HAL.Base.HALJoystickAxesArray.axes1"></member>
    <member name="F:HAL.Base.HALJoystickAxesArray.axes10"></member>
    <member name="F:HAL.Base.HALJoystickAxesArray.axes11"></member>
    <member name="F:HAL.Base.HALJoystickAxesArray.axes2"></member>
    <member name="F:HAL.Base.HALJoystickAxesArray.axes3"></member>
    <member name="F:HAL.Base.HALJoystickAxesArray.axes4"></member>
    <member name="F:HAL.Base.HALJoystickAxesArray.axes5"></member>
    <member name="F:HAL.Base.HALJoystickAxesArray.axes6"></member>
    <member name="F:HAL.Base.HALJoystickAxesArray.axes7"></member>
    <member name="F:HAL.Base.HALJoystickAxesArray.axes8"></member>
    <member name="F:HAL.Base.HALJoystickAxesArray.axes9"></member>
    <member name="P:HAL.Base.HALJoystickAxesArray.Item(System.Int32)"></member>
    <member name="T:HAL.Base.HALJoystickAxesTypesArray"></member>
    <member name="F:HAL.Base.HALJoystickAxesTypesArray.axes0"></member>
    <member name="F:HAL.Base.HALJoystickAxesTypesArray.axes1"></member>
    <member name="F:HAL.Base.HALJoystickAxesTypesArray.axes10"></member>
    <member name="F:HAL.Base.HALJoystickAxesTypesArray.axes11"></member>
    <member name="F:HAL.Base.HALJoystickAxesTypesArray.axes2"></member>
    <member name="F:HAL.Base.HALJoystickAxesTypesArray.axes3"></member>
    <member name="F:HAL.Base.HALJoystickAxesTypesArray.axes4"></member>
    <member name="F:HAL.Base.HALJoystickAxesTypesArray.axes5"></member>
    <member name="F:HAL.Base.HALJoystickAxesTypesArray.axes6"></member>
    <member name="F:HAL.Base.HALJoystickAxesTypesArray.axes7"></member>
    <member name="F:HAL.Base.HALJoystickAxesTypesArray.axes8"></member>
    <member name="F:HAL.Base.HALJoystickAxesTypesArray.axes9"></member>
    <member name="P:HAL.Base.HALJoystickAxesTypesArray.Item(System.Int32)"></member>
    <member name="T:HAL.Base.HALJoystickButtons"></member>
    <member name="F:HAL.Base.HALJoystickButtons.buttons"></member>
    <member name="F:HAL.Base.HALJoystickButtons.count"></member>
    <member name="T:HAL.Base.HALJoystickDescriptor"></member>
    <member name="F:HAL.Base.HALJoystickDescriptor.axisCount"></member>
    <member name="F:HAL.Base.HALJoystickDescriptor.axisTypes"></member>
    <member name="F:HAL.Base.HALJoystickDescriptor.buttonCount"></member>
    <member name="F:HAL.Base.HALJoystickDescriptor.isXbox"></member>
    <member name="F:HAL.Base.HALJoystickDescriptor.name"></member>
    <member name="F:HAL.Base.HALJoystickDescriptor.povCount"></member>
    <member name="F:HAL.Base.HALJoystickDescriptor.type"></member>
    <member name="T:HAL.Base.HALJoystickNameArray"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte0"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte1"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte10"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte100"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte101"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte102"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte103"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte104"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte105"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte106"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte107"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte108"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte109"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte11"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte110"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte111"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte112"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte113"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte114"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte115"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte116"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte117"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte118"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte119"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte12"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte120"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte121"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte122"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte123"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte124"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte125"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte126"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte127"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte128"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte129"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte13"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte130"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte131"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte132"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte133"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte134"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte135"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte136"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte137"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte138"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte139"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte14"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte140"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte141"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte142"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte143"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte144"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte145"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte146"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte147"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte148"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte149"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte15"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte150"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte151"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte152"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte153"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte154"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte155"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte156"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte157"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte158"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte159"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte16"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte160"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte161"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte162"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte163"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte164"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte165"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte166"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte167"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte168"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte169"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte17"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte170"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte171"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte172"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte173"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte174"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte175"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte176"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte177"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte178"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte179"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte18"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte180"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte181"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte182"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte183"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte184"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte185"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte186"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte187"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte188"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte189"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte19"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte190"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte191"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte192"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte193"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte194"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte195"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte196"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte197"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte198"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte199"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte2"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte20"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte200"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte201"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte202"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte203"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte204"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte205"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte206"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte207"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte208"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte209"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte21"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte210"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte211"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte212"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte213"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte214"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte215"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte216"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte217"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte218"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte219"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte22"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte220"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte221"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte222"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte223"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte224"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte225"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte226"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte227"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte228"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte229"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte23"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte230"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte231"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte232"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte233"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte234"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte235"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte236"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte237"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte238"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte239"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte24"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte240"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte241"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte242"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte243"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte244"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte245"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte246"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte247"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte248"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte249"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte25"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte250"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte251"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte252"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte253"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte254"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte255"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte26"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte27"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte28"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte29"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte3"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte30"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte31"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte32"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte33"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte34"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte35"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte36"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte37"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte38"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte39"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte4"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte40"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte41"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte42"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte43"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte44"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte45"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte46"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte47"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte48"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte49"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte5"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte50"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte51"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte52"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte53"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte54"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte55"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte56"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte57"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte58"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte59"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte6"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte60"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte61"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte62"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte63"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte64"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte65"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte66"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte67"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte68"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte69"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte7"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte70"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte71"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte72"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte73"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte74"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte75"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte76"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte77"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte78"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte79"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte8"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte80"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte81"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte82"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte83"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte84"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte85"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte86"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte87"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte88"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte89"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte9"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte90"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte91"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte92"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte93"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte94"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte95"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte96"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte97"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte98"></member>
    <member name="F:HAL.Base.HALJoystickNameArray.byte99"></member>
    <member name="P:HAL.Base.HALJoystickNameArray.Item(System.Int32)"></member>
    <member name="M:HAL.Base.HALJoystickNameArray.ToString"></member>
    <member name="T:HAL.Base.HALJoystickPOVArray"></member>
    <member name="P:HAL.Base.HALJoystickPOVArray.Item(System.Int32)"></member>
    <member name="T:HAL.Base.HALJoystickPOVs"></member>
    <member name="F:HAL.Base.HALJoystickPOVs.count"></member>
    <member name="F:HAL.Base.HALJoystickPOVs.povs"></member>
    <member name="T:HAL.Base.HALNotifier"></member>
    <member name="M:HAL.Base.HALNotifier.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Base.HALNotifier</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:HAL.Base.HALNotifier.CleanNotifier"></member>
    <member name="F:HAL.Base.HALNotifier.GetNotifierParam"></member>
    <member name="F:HAL.Base.HALNotifier.InitializeNotifier"></member>
    <member name="F:HAL.Base.HALNotifier.StopNotifierAlarm"></member>
    <member name="F:HAL.Base.HALNotifier.UpdateNotifierAlarm"></member>
    <member name="T:HAL.Base.HALNotifier.CleanNotifierDelegate"></member>
    <member name="T:HAL.Base.HALNotifier.GetNotifierParamDelegate"></member>
    <member name="T:HAL.Base.HALNotifier.InitializeNotifierDelegate"></member>
    <member name="T:HAL.Base.HALNotifier.StopNotifierAlarmDelegate"></member>
    <member name="T:HAL.Base.HALNotifier.UpdateNotifierAlarmDelegate"></member>
    <member name="T:HAL.Base.HALPDP"></member>
    <member name="M:HAL.Base.HALPDP.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Base.HALPDP</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:HAL.Base.HALPDP.ClearPDPStickyFaults"></member>
    <member name="F:HAL.Base.HALPDP.GetPDPChannelCurrent"></member>
    <member name="F:HAL.Base.HALPDP.GetPDPTemperature"></member>
    <member name="F:HAL.Base.HALPDP.GetPDPTotalCurrent"></member>
    <member name="F:HAL.Base.HALPDP.GetPDPTotalEnergy"></member>
    <member name="F:HAL.Base.HALPDP.GetPDPTotalPower"></member>
    <member name="F:HAL.Base.HALPDP.GetPDPVoltage"></member>
    <member name="F:HAL.Base.HALPDP.InitializePDP"></member>
    <member name="F:HAL.Base.HALPDP.ResetPDPTotalEnergy"></member>
    <member name="T:HAL.Base.HALPDP.ClearPDPStickyFaultsDelegate"></member>
    <member name="T:HAL.Base.HALPDP.GetPDPChannelCurrentDelegate"></member>
    <member name="T:HAL.Base.HALPDP.GetPDPTemperatureDelegate"></member>
    <member name="T:HAL.Base.HALPDP.GetPDPTotalCurrentDelegate"></member>
    <member name="T:HAL.Base.HALPDP.GetPDPTotalEnergyDelegate"></member>
    <member name="T:HAL.Base.HALPDP.GetPDPTotalPowerDelegate"></member>
    <member name="T:HAL.Base.HALPDP.GetPDPVoltageDelegate"></member>
    <member name="T:HAL.Base.HALPDP.InitializePDPDelegate"></member>
    <member name="T:HAL.Base.HALPDP.ResetPDPTotalEnergyDelegate"></member>
    <member name="T:HAL.Base.HALPower"></member>
    <member name="M:HAL.Base.HALPower.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Base.HALPower</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:HAL.Base.HALPower.GetUserActive3V3"></member>
    <member name="F:HAL.Base.HALPower.GetUserActive5V"></member>
    <member name="F:HAL.Base.HALPower.GetUserActive6V"></member>
    <member name="F:HAL.Base.HALPower.GetUserCurrent3V3"></member>
    <member name="F:HAL.Base.HALPower.GetUserCurrent5V"></member>
    <member name="F:HAL.Base.HALPower.GetUserCurrent6V"></member>
    <member name="F:HAL.Base.HALPower.GetUserCurrentFaults3V3"></member>
    <member name="F:HAL.Base.HALPower.GetUserCurrentFaults5V"></member>
    <member name="F:HAL.Base.HALPower.GetUserCurrentFaults6V"></member>
    <member name="F:HAL.Base.HALPower.GetUserVoltage3V3"></member>
    <member name="F:HAL.Base.HALPower.GetUserVoltage5V"></member>
    <member name="F:HAL.Base.HALPower.GetUserVoltage6V"></member>
    <member name="F:HAL.Base.HALPower.GetVinCurrent"></member>
    <member name="F:HAL.Base.HALPower.GetVinVoltage"></member>
    <member name="T:HAL.Base.HALPower.GetUserActive3V3Delegate"></member>
    <member name="T:HAL.Base.HALPower.GetUserActive5VDelegate"></member>
    <member name="T:HAL.Base.HALPower.GetUserActive6VDelegate"></member>
    <member name="T:HAL.Base.HALPower.GetUserCurrent3V3Delegate"></member>
    <member name="T:HAL.Base.HALPower.GetUserCurrent5VDelegate"></member>
    <member name="T:HAL.Base.HALPower.GetUserCurrent6VDelegate"></member>
    <member name="T:HAL.Base.HALPower.GetUserCurrentFaults3V3Delegate"></member>
    <member name="T:HAL.Base.HALPower.GetUserCurrentFaults5VDelegate"></member>
    <member name="T:HAL.Base.HALPower.GetUserCurrentFaults6VDelegate"></member>
    <member name="T:HAL.Base.HALPower.GetUserVoltage3V3Delegate"></member>
    <member name="T:HAL.Base.HALPower.GetUserVoltage5VDelegate"></member>
    <member name="T:HAL.Base.HALPower.GetUserVoltage6VDelegate"></member>
    <member name="T:HAL.Base.HALPower.GetVinCurrentDelegate"></member>
    <member name="T:HAL.Base.HALPower.GetVinVoltageDelegate"></member>
    <member name="T:HAL.Base.HALSemaphore"></member>
    <member name="M:HAL.Base.HALSemaphore.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Base.HALSemaphore</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:HAL.Base.HALSemaphore.DeleteMultiWait"></member>
    <member name="F:HAL.Base.HALSemaphore.DeleteMutex"></member>
    <member name="F:HAL.Base.HALSemaphore.GiveMultiWait"></member>
    <member name="F:HAL.Base.HALSemaphore.GiveMutex"></member>
    <member name="F:HAL.Base.HALSemaphore.InitializeMultiWait"></member>
    <member name="F:HAL.Base.HALSemaphore.InitializeMutexNormal"></member>
    <member name="F:HAL.Base.HALSemaphore.SEMAPHORE_DELETE_SAFE"></member>
    <member name="F:HAL.Base.HALSemaphore.SEMAPHORE_EMPTY"></member>
    <member name="F:HAL.Base.HALSemaphore.SEMAPHORE_FULL"></member>
    <member name="F:HAL.Base.HALSemaphore.SEMAPHORE_INVERSION_SAFE"></member>
    <member name="F:HAL.Base.HALSemaphore.SEMAPHORE_NO_WAIT"></member>
    <member name="F:HAL.Base.HALSemaphore.SEMAPHORE_Q_FIFO"></member>
    <member name="F:HAL.Base.HALSemaphore.SEMAPHORE_Q_PRIORITY"></member>
    <member name="F:HAL.Base.HALSemaphore.SEMAPHORE_WAIT_FOREVER"></member>
    <member name="F:HAL.Base.HALSemaphore.TakeMultiWait"></member>
    <member name="F:HAL.Base.HALSemaphore.TakeMutex"></member>
    <member name="F:HAL.Base.HALSemaphore.TryTakeMutex"></member>
    <member name="T:HAL.Base.HALSemaphore.DeleteMultiWaitDelegate"></member>
    <member name="T:HAL.Base.HALSemaphore.DeleteMutexDelegate"></member>
    <member name="T:HAL.Base.HALSemaphore.GiveMultiWaitDelegate"></member>
    <member name="T:HAL.Base.HALSemaphore.GiveMutexDelegate"></member>
    <member name="T:HAL.Base.HALSemaphore.InitializeMultiWaitDelegate"></member>
    <member name="T:HAL.Base.HALSemaphore.InitializeMutexNormalDelegate"></member>
    <member name="T:HAL.Base.HALSemaphore.TakeMultiWaitDelegate"></member>
    <member name="T:HAL.Base.HALSemaphore.TakeMutexDelegate"></member>
    <member name="T:HAL.Base.HALSemaphore.TryTakeMutexDelegate"></member>
    <member name="T:HAL.Base.HALSerialPort"></member>
    <member name="M:HAL.Base.HALSerialPort.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Base.HALSerialPort</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:HAL.Base.HALSerialPort.SerialClear"></member>
    <member name="F:HAL.Base.HALSerialPort.SerialClose"></member>
    <member name="F:HAL.Base.HALSerialPort.SerialDisableTermination"></member>
    <member name="F:HAL.Base.HALSerialPort.SerialEnableTermination"></member>
    <member name="F:HAL.Base.HALSerialPort.SerialFlush"></member>
    <member name="F:HAL.Base.HALSerialPort.SerialGetBytesReceived"></member>
    <member name="F:HAL.Base.HALSerialPort.SerialInitializePort"></member>
    <member name="F:HAL.Base.HALSerialPort.SerialRead"></member>
    <member name="F:HAL.Base.HALSerialPort.SerialSetBaudRate"></member>
    <member name="F:HAL.Base.HALSerialPort.SerialSetDataBits"></member>
    <member name="F:HAL.Base.HALSerialPort.SerialSetFlowControl"></member>
    <member name="F:HAL.Base.HALSerialPort.SerialSetParity"></member>
    <member name="F:HAL.Base.HALSerialPort.SerialSetReadBufferSize"></member>
    <member name="F:HAL.Base.HALSerialPort.SerialSetStopBits"></member>
    <member name="F:HAL.Base.HALSerialPort.SerialSetTimeout"></member>
    <member name="F:HAL.Base.HALSerialPort.SerialSetWriteBufferSize"></member>
    <member name="F:HAL.Base.HALSerialPort.SerialSetWriteMode"></member>
    <member name="F:HAL.Base.HALSerialPort.SerialWrite"></member>
    <member name="T:HAL.Base.HALSerialPort.SerialClearDelegate"></member>
    <member name="T:HAL.Base.HALSerialPort.SerialCloseDelegate"></member>
    <member name="T:HAL.Base.HALSerialPort.SerialDisableTerminationDelegate"></member>
    <member name="T:HAL.Base.HALSerialPort.SerialEnableTerminationDelegate"></member>
    <member name="T:HAL.Base.HALSerialPort.SerialFlushDelegate"></member>
    <member name="T:HAL.Base.HALSerialPort.SerialGetBytesReceivedDelegate"></member>
    <member name="T:HAL.Base.HALSerialPort.SerialInitializePortDelegate"></member>
    <member name="T:HAL.Base.HALSerialPort.SerialReadDelegate"></member>
    <member name="T:HAL.Base.HALSerialPort.SerialSetBaudRateDelegate"></member>
    <member name="T:HAL.Base.HALSerialPort.SerialSetDataBitsDelegate"></member>
    <member name="T:HAL.Base.HALSerialPort.SerialSetFlowControlDelegate"></member>
    <member name="T:HAL.Base.HALSerialPort.SerialSetParityDelegate"></member>
    <member name="T:HAL.Base.HALSerialPort.SerialSetReadBufferSizeDelegate"></member>
    <member name="T:HAL.Base.HALSerialPort.SerialSetStopBitsDelegate"></member>
    <member name="T:HAL.Base.HALSerialPort.SerialSetTimeoutDelegate"></member>
    <member name="T:HAL.Base.HALSerialPort.SerialSetWriteBufferSizeDelegate"></member>
    <member name="T:HAL.Base.HALSerialPort.SerialSetWriteModeDelegate"></member>
    <member name="T:HAL.Base.HALSerialPort.SerialWriteDelegate"></member>
    <member name="T:HAL.Base.HALSolenoid"></member>
    <member name="M:HAL.Base.HALSolenoid.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Base.HALSolenoid</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:HAL.Base.HALSolenoid.CheckSolenoidModule"></member>
    <member name="F:HAL.Base.HALSolenoid.ClearAllPCMStickyFaults_sol"></member>
    <member name="F:HAL.Base.HALSolenoid.FreeSolenoidPort"></member>
    <member name="F:HAL.Base.HALSolenoid.GetAllSolenoids"></member>
    <member name="F:HAL.Base.HALSolenoid.GetPCMSolenoidBlackList"></member>
    <member name="F:HAL.Base.HALSolenoid.GetPCMSolenoidVoltageFault"></member>
    <member name="F:HAL.Base.HALSolenoid.GetPCMSolenoidVoltageStickyFault"></member>
    <member name="F:HAL.Base.HALSolenoid.GetSolenoid"></member>
    <member name="F:HAL.Base.HALSolenoid.InitializeSolenoidPort"></member>
    <member name="F:HAL.Base.HALSolenoid.SetSolenoid"></member>
    <member name="T:HAL.Base.HALSolenoid.CheckSolenoidModuleDelegate"></member>
    <member name="T:HAL.Base.HALSolenoid.ClearAllPCMStickyFaults_solDelegate"></member>
    <member name="T:HAL.Base.HALSolenoid.FreeSolenoidPortDelegate"></member>
    <member name="T:HAL.Base.HALSolenoid.GetAllSolenoidsDelegate"></member>
    <member name="T:HAL.Base.HALSolenoid.GetPCMSolenoidBlackListDelegate"></member>
    <member name="T:HAL.Base.HALSolenoid.GetPCMSolenoidVoltageFaultDelegate"></member>
    <member name="T:HAL.Base.HALSolenoid.GetPCMSolenoidVoltageStickyFaultDelegate"></member>
    <member name="T:HAL.Base.HALSolenoid.GetSolenoidDelegate"></member>
    <member name="T:HAL.Base.HALSolenoid.InitializeSolenoidPortDelegate"></member>
    <member name="T:HAL.Base.HALSolenoid.SetSolenoidDelegate"></member>
    <member name="T:HAL.Base.HALUtilities"></member>
    <member name="M:HAL.Base.HALUtilities.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Base.HALUtilities</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="F:HAL.Base.HALUtilities.DelayMillis"></member>
    <member name="F:HAL.Base.HALUtilities.DelaySeconds"></member>
    <member name="F:HAL.Base.HALUtilities.DelayTicks"></member>
    <member name="F:HAL.Base.HALUtilities.HAL_NO_WAIT"></member>
    <member name="F:HAL.Base.HALUtilities.HAL_WAIT_FOREVER"></member>
    <member name="T:HAL.Base.HALUtilities.DelayMillisDelegate"></member>
    <member name="T:HAL.Base.HALUtilities.DelaySecondsDelegate"></member>
    <member name="T:HAL.Base.HALUtilities.DelayTicksDelegate"></member>
    <member name="T:HAL.Base.ILibraryLoader"></member>
    <member name="M:HAL.Base.ILibraryLoader.GetProcAddress(System.IntPtr,System.String)"></member>
    <member name="M:HAL.Base.ILibraryLoader.LoadLibrary(System.String)"></member>
    <member name="T:HAL.Base.Instances"></member>
    <member name="F:HAL.Base.Instances.kLanguage_LabVIEW"></member>
    <member name="F:HAL.Base.Instances.kLanguage_CPlusPlus"></member>
    <member name="F:HAL.Base.Instances.kLanguage_Java"></member>
    <member name="F:HAL.Base.Instances.kLanguage_Python"></member>
    <member name="F:HAL.Base.Instances.kLanguage_DotNet"></member>
    <member name="F:HAL.Base.Instances.kCANPlugin_BlackJagBridge"></member>
    <member name="F:HAL.Base.Instances.kCANPlugin_2CAN"></member>
    <member name="F:HAL.Base.Instances.kFramework_Iterative"></member>
    <member name="F:HAL.Base.Instances.kFramework_Sample"></member>
    <member name="F:HAL.Base.Instances.kFramework_CommandControl"></member>
    <member name="F:HAL.Base.Instances.kRobotDrive_ArcadeStandard"></member>
    <member name="F:HAL.Base.Instances.kRobotDrive_ArcadeButtonSpin"></member>
    <member name="F:HAL.Base.Instances.kRobotDrive_ArcadeRatioCurve"></member>
    <member name="F:HAL.Base.Instances.kRobotDrive_Tank"></member>
    <member name="F:HAL.Base.Instances.kRobotDrive_MecanumPolar"></member>
    <member name="F:HAL.Base.Instances.kRobotDrive_MecanumCartesian"></member>
    <member name="F:HAL.Base.Instances.kDriverStationCIO_Analog"></member>
    <member name="F:HAL.Base.Instances.kDriverStationCIO_DigitalIn"></member>
    <member name="F:HAL.Base.Instances.kDriverStationCIO_DigitalOut"></member>
    <member name="F:HAL.Base.Instances.kDriverStationEIO_Acceleration"></member>
    <member name="F:HAL.Base.Instances.kDriverStationEIO_AnalogIn"></member>
    <member name="F:HAL.Base.Instances.kDriverStationEIO_AnalogOut"></member>
    <member name="F:HAL.Base.Instances.kDriverStationEIO_Button"></member>
    <member name="F:HAL.Base.Instances.kDriverStationEIO_LED"></member>
    <member name="F:HAL.Base.Instances.kDriverStationEIO_DigitalIn"></member>
    <member name="F:HAL.Base.Instances.kDriverStationEIO_DigitalOut"></member>
    <member name="F:HAL.Base.Instances.kDriverStationEIO_FixedDigitalOut"></member>
    <member name="F:HAL.Base.Instances.kDriverStationEIO_PWM"></member>
    <member name="F:HAL.Base.Instances.kDriverStationEIO_Encoder"></member>
    <member name="F:HAL.Base.Instances.kDriverStationEIO_TouchSlider"></member>
    <member name="F:HAL.Base.Instances.kADXL345_SPI"></member>
    <member name="F:HAL.Base.Instances.kADXL345_I2C"></member>
    <member name="F:HAL.Base.Instances.kCommand_Scheduler"></member>
    <member name="F:HAL.Base.Instances.kSmartDashboard_Instance"></member>
    <member name="T:HAL.Base.LinuxLibraryLoader"></member>
    <member name="M:HAL.Base.LinuxLibraryLoader.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Base.LinuxLibraryLoader</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:HAL.Base.Mode"></member>
    <member name="F:HAL.Base.Mode.TwoPulse"></member>
    <member name="F:HAL.Base.Mode.Semiperiod"></member>
    <member name="F:HAL.Base.Mode.PulseLength"></member>
    <member name="F:HAL.Base.Mode.ExternalDirection"></member>
    <member name="T:HAL.Base.ResourceType"></member>
    <member name="F:HAL.Base.ResourceType.kResourceType_Controller"></member>
    <member name="F:HAL.Base.ResourceType.kResourceType_Module"></member>
    <member name="F:HAL.Base.ResourceType.kResourceType_Language"></member>
    <member name="F:HAL.Base.ResourceType.kResourceType_CANPlugin"></member>
    <member name="F:HAL.Base.ResourceType.kResourceType_Accelerometer"></member>
    <member name="F:HAL.Base.ResourceType.kResourceType_ADXL345"></member>
    <member name="F:HAL.Base.ResourceType.kResourceType_AnalogChannel"></member>
    <member name="F:HAL.Base.ResourceType.kResourceType_AnalogTrigger"></member>
    <member name="F:HAL.Base.ResourceType.kResourceType_AnalogTriggerOutput"></member>
    <member name="F:HAL.Base.ResourceType.kResourceType_CANJaguar"></member>
    <member name="F:HAL.Base.ResourceType.kResourceType_Compressor"></member>
    <member name="F:HAL.Base.ResourceType.kResourceType_Counter"></member>
    <member name="F:HAL.Base.ResourceType.kResourceType_Dashboard"></member>
    <member name="F:HAL.Base.ResourceType.kResourceType_DigitalInput"></member>
    <member name="F:HAL.Base.ResourceType.kResourceType_DigitalOutput"></member>
    <member name="F:HAL.Base.ResourceType.kResourceType_DriverStationCIO"></member>
    <member name="F:HAL.Base.ResourceType.kResourceType_DriverStationEIO"></member>
    <member name="F:HAL.Base.ResourceType.kResourceType_DriverStationLCD"></member>
    <member name="F:HAL.Base.ResourceType.kResourceType_Encoder"></member>
    <member name="F:HAL.Base.ResourceType.kResourceType_GearTooth"></member>
    <member name="F:HAL.Base.ResourceType.kResourceType_Gyro"></member>
    <member name="F:HAL.Base.ResourceType.kResourceType_I2C"></member>
    <member name="F:HAL.Base.ResourceType.kResourceType_Framework"></member>
    <member name="F:HAL.Base.ResourceType.kResourceType_Jaguar"></member>
    <member name="F:HAL.Base.ResourceType.kResourceType_Joystick"></member>
    <member name="F:HAL.Base.ResourceType.kResourceType_Kinect"></member>
    <member name="F:HAL.Base.ResourceType.kResourceType_KinectStick"></member>
    <member name="F:HAL.Base.ResourceType.kResourceType_PIDController"></member>
    <member name="F:HAL.Base.ResourceType.kResourceType_Preferences"></member>
    <member name="F:HAL.Base.ResourceType.kResourceType_PWM"></member>
    <member name="F:HAL.Base.ResourceType.kResourceType_Relay"></member>
    <member name="F:HAL.Base.ResourceType.kResourceType_RobotDrive"></member>
    <member name="F:HAL.Base.ResourceType.kResourceType_SerialPort"></member>
    <member name="F:HAL.Base.ResourceType.kResourceType_Servo"></member>
    <member name="F:HAL.Base.ResourceType.kResourceType_Solenoid"></member>
    <member name="F:HAL.Base.ResourceType.kResourceType_SPI"></member>
    <member name="F:HAL.Base.ResourceType.kResourceType_Task"></member>
    <member name="F:HAL.Base.ResourceType.kResourceType_Ultrasonic"></member>
    <member name="F:HAL.Base.ResourceType.kResourceType_Victor"></member>
    <member name="F:HAL.Base.ResourceType.kResourceType_Button"></member>
    <member name="F:HAL.Base.ResourceType.kResourceType_Command"></member>
    <member name="F:HAL.Base.ResourceType.kResourceType_AxisCamera"></member>
    <member name="F:HAL.Base.ResourceType.kResourceType_PCVideoServer"></member>
    <member name="F:HAL.Base.ResourceType.kResourceType_SmartDashboard"></member>
    <member name="F:HAL.Base.ResourceType.kResourceType_Talon"></member>
    <member name="F:HAL.Base.ResourceType.kResourceType_HiTechnicColorSensor"></member>
    <member name="F:HAL.Base.ResourceType.kResourceType_HiTechnicAccel"></member>
    <member name="F:HAL.Base.ResourceType.kResourceType_HiTechnicCompass"></member>
    <member name="F:HAL.Base.ResourceType.kResourceType_SRF08"></member>
    <member name="F:HAL.Base.ResourceType.kResourceType_AnalogOutput"></member>
    <member name="F:HAL.Base.ResourceType.kResourceType_VictorSP"></member>
    <member name="F:HAL.Base.ResourceType.kResourceType_TalonSRX"></member>
    <member name="F:HAL.Base.ResourceType.kResourceType_CANTalonSRX"></member>
    <member name="F:HAL.Base.ResourceType.kResourceType_ADXL362"></member>
    <member name="F:HAL.Base.ResourceType.kResourceType_ADXRS450"></member>
    <member name="F:HAL.Base.ResourceType.kResourceType_RevSPARK"></member>
    <member name="F:HAL.Base.ResourceType.kResourceType_MindsensorsSD540"></member>
    <member name="F:HAL.Base.ResourceType.kResourceType_DigitalFilter"></member>
    <member name="T:HAL.Base.RoboRioLibraryLoader"></member>
    <member name="M:HAL.Base.RoboRioLibraryLoader.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Base.RoboRioLibraryLoader</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:HAL.Base.WindowsLibraryLoader"></member>
    <member name="M:HAL.Base.WindowsLibraryLoader.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Base.WindowsLibraryLoader</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="T:HAL.Simulator.DriverStationHelper">
      <summary>
            This class is useful to emulate a driver station correctly in the simulator.
            </summary>
    </member>
    <member name="P:HAL.Simulator.DriverStationHelper.JoystickCallback">
      <summary>
            Assign to this callback to set the joysticks right before updating the robot data.
            </summary>
    </member>
    <member name="M:HAL.Simulator.DriverStationHelper.SetAllianceStation(HAL.Base.HALAllianceStationID)"></member>
    <member name="M:HAL.Simulator.DriverStationHelper.SetDSAttached(System.Boolean)"></member>
    <member name="M:HAL.Simulator.DriverStationHelper.SetEnabledState(HAL.Simulator.DriverStationHelper.EnabledState)">
      <summary>
            Sets the robot enabled state
            </summary>
      <param name="state">The state to set</param>
    </member>
    <member name="M:HAL.Simulator.DriverStationHelper.SetFMSAttached(System.Boolean)"></member>
    <member name="M:HAL.Simulator.DriverStationHelper.SetJoystickAxesCount(System.Int32,System.Int32)">
      <summary>
            Sets the number of axes on the specific joystick.
            </summary>
      <param name="joystickNum">The joystick number.</param>
      <param name="axesCount">The number of axes to attach to the controller.</param>
    </member>
    <member name="M:HAL.Simulator.DriverStationHelper.SetJoystickAxis(System.Int32,System.Int32,System.Double)">
      <summary>
            Set the value for a specific joystick axis
            </summary>
      <param name="joystickNum">The joystick index [0..5]</param>
      <param name="axisNum">The axis number [0..n], set n using <see cref="M:HAL.Simulator.DriverStationHelper.SetJoystickAxesCount(System.Int32,System.Int32)" />.</param>
      <param name="value">The joystick value from -1.0 to 1.0</param>
    </member>
    <member name="M:HAL.Simulator.DriverStationHelper.SetJoystickButton(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Set the value for a specific joystick button
            </summary>
      <param name="joystickNum">The joystick index [0..5]</param>
      <param name="buttonNum">The button number [1..n], set n using <see cref="M:HAL.Simulator.DriverStationHelper.SetJoystickButtonCount(System.Int32,System.Int32)" />.</param>
      <param name="value">The button value</param>
    </member>
    <member name="M:HAL.Simulator.DriverStationHelper.SetJoystickButtonCount(System.Int32,System.Int32)">
      <summary>
            Sets the number of buttons on the specific joystick.
            </summary>
      <param name="joystickNum">The joystick number.</param>
      <param name="buttonCount">The number of buttons to attach to the controller.</param>
    </member>
    <member name="M:HAL.Simulator.DriverStationHelper.SetJoystickName(System.Int32,System.String)">
      <summary>
            Sets the joystick name.
            </summary>
      <param name="joystickNum">The joystick number</param>
      <param name="name">The name to attach to the joystick.</param>
    </member>
    <member name="M:HAL.Simulator.DriverStationHelper.SetJoystickPov(System.Int32,System.Int32,System.Int32)">
      <summary>
            Sets the value for a specific joystick POV, in degrees
            </summary>
      <param name="joystickNum">The joystick index [0..6].</param>
      <param name="povNum">The pov number [0..n], set n using <see cref="M:HAL.Simulator.DriverStationHelper.SetJoystickPovCount(System.Int32,System.Int32)" />.</param>
      <param name="povValue">The pov value (-1 if not pressed, degrees otherwise)</param>
    </member>
    <member name="M:HAL.Simulator.DriverStationHelper.SetJoystickPovCount(System.Int32,System.Int32)">
      <summary>
            Sets the number of povs on the specific joystick.
            </summary>
      <param name="joystickNum">The joystick number.</param>
      <param name="povCount">The number of povs to attach to the controller.</param>
    </member>
    <member name="M:HAL.Simulator.DriverStationHelper.SetRobotMode(HAL.Simulator.DriverStationHelper.RobotMode)">
      <summary>
            Sets the robot mode
            </summary>
      <param name="mode">The robot mode to set</param>
    </member>
    <member name="M:HAL.Simulator.DriverStationHelper.StartDSLoop">
      <summary>
            Start the driver station loop at the default 20ms interval
            </summary>
    </member>
    <member name="M:HAL.Simulator.DriverStationHelper.StartDSLoop(System.Int32)">
      <summary>
            Start the driver station loop at the requested interval
            </summary>
      <param name="loopTime">The loop interval in ms</param>
    </member>
    <member name="M:HAL.Simulator.DriverStationHelper.StartDSLoop(System.TimeSpan)">
      <summary>
            Start the driver station loop at the requested interval
            </summary>
      <param name="loopTime">The loop interval</param>
    </member>
    <member name="M:HAL.Simulator.DriverStationHelper.StopDSLoop">
      <summary>
            Stop the driver station loop
            </summary>
    </member>
    <member name="T:HAL.Simulator.DriverStationHelper.EnabledState">
      <summary>
            The robot enabled state
            </summary>
    </member>
    <member name="F:HAL.Simulator.DriverStationHelper.EnabledState.Enabled"></member>
    <member name="F:HAL.Simulator.DriverStationHelper.EnabledState.Disabled"></member>
    <member name="F:HAL.Simulator.DriverStationHelper.EnabledState.EStopped"></member>
    <member name="T:HAL.Simulator.DriverStationHelper.RobotMode"></member>
    <member name="F:HAL.Simulator.DriverStationHelper.RobotMode.Autonomous"></member>
    <member name="F:HAL.Simulator.DriverStationHelper.RobotMode.Teleop"></member>
    <member name="F:HAL.Simulator.DriverStationHelper.RobotMode.Test"></member>
    <member name="T:HAL.Simulator.ISimulator">
      <summary>
            Interface for simulators
            </summary>
    </member>
    <member name="M:HAL.Simulator.ISimulator.Initialize">
      <summary>
            Called right before <see cref="M:HAL.Simulator.ISimulator.Start" />. Runs in the main thread, so must return.
            </summary>
    </member>
    <member name="P:HAL.Simulator.ISimulator.Name">
      <summary>
            The listing name for the simulator.
            </summary>
    </member>
    <member name="M:HAL.Simulator.ISimulator.Start">
      <summary>
            Main simulator entry method. Called in a seperate thread, so does not need to return.
            </summary>
    </member>
    <member name="T:HAL.Simulator.NotifyDict`2">
      <summary>
            This class allows us to listen for changes in a specific part of the dictionary. 
            </summary>
      <typeparam name="TKey">Please use dynamic</typeparam>
      <typeparam name="TValue">Please use dynamic</typeparam>
    </member>
    <member name="M:HAL.Simulator.NotifyDict`2.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Simulator.NotifyDict`2</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:HAL.Simulator.NotifyDict`2.Cancel(`0,System.Action{System.Object,System.Object})">
      <summary>
            Cancel a notify function
            </summary>
      <param name="key">The key the function is waiting for</param>
      <param name="action">The callback function to cancel.</param>
    </member>
    <member name="P:HAL.Simulator.NotifyDict`2.Item(`0)">
      <summary>
            Gets or sets the value associated with the specified key. If a callback exists for the key, call it.
            </summary>
      <param name="key">The key of the value to get or set.</param>
      <returns>The value associated with the specified key.</returns>
    </member>
    <member name="M:HAL.Simulator.NotifyDict`2.Register(`0,System.Action{System.Object,System.Object},System.Boolean)">
      <summary>
            Register a notify function to get called when the field updates.
            </summary>
      <param name="key">The key to watch</param>
      <param name="action">The callback function</param>
      <param name="notify">Whether to notify immediately</param>
    </member>
    <member name="T:HAL.Simulator.SimData">
      <summary></summary>
    </member>
    <member name="M:HAL.Simulator.SimData.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Simulator.SimData</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:HAL.Simulator.SimData.Accelerometer">
      <summary>
            Gets the accelerometer data.
            </summary>
    </member>
    <member name="P:HAL.Simulator.SimData.AnalogIn">
      <summary>
            Gets the analog in dada.
            </summary>
    </member>
    <member name="P:HAL.Simulator.SimData.AnalogOut">
      <summary>
            Gets the analog out data.
            </summary>
    </member>
    <member name="P:HAL.Simulator.SimData.AnalogTrigger">
      <summary>
            Gets the analog trigger.
            </summary>
    </member>
    <member name="P:HAL.Simulator.SimData.Counter">
      <summary>
            Gets the counter.
            </summary>
    </member>
    <member name="P:HAL.Simulator.SimData.DigitalGlitchFilter"></member>
    <member name="P:HAL.Simulator.SimData.DigitalPWM">
      <summary>
            Gets the digital PWM.
            </summary>
    </member>
    <member name="P:HAL.Simulator.SimData.DIO">
      <summary>
            Gets the dio.
            </summary>
    </member>
    <member name="P:HAL.Simulator.SimData.DriverStation">
      <summary>
            Gets the driver station.
            </summary>
    </member>
    <member name="P:HAL.Simulator.SimData.Encoder">
      <summary>
            Gets the encoder.
            </summary>
    </member>
    <member name="P:HAL.Simulator.SimData.ErrorData">
      <summary>
            Gets the error data.
            </summary>
    </member>
    <member name="M:HAL.Simulator.SimData.GetCanTalon(System.Int32)">
      <summary>
            Gets the can talon.
            </summary>
      <param name="id">The identifier.</param>
      <returns></returns>
    </member>
    <member name="M:HAL.Simulator.SimData.GetPCM(System.Int32)">
      <summary>
            Gets the PCM.
            </summary>
      <param name="id">The identifier.</param>
      <returns></returns>
    </member>
    <member name="M:HAL.Simulator.SimData.GetPDP(System.Int32)">
      <summary>
            Gets the PDP.
            </summary>
      <param name="id">The identifier.</param>
      <returns></returns>
    </member>
    <member name="P:HAL.Simulator.SimData.GlobalData">
      <summary>
            Gets the global data.
            </summary>
    </member>
    <member name="M:HAL.Simulator.SimData.InitializeCanTalon(System.Int32)">
      <summary>
            Initializes the can talon.
            </summary>
      <param name="id">The identifier.</param>
      <returns></returns>
    </member>
    <member name="M:HAL.Simulator.SimData.InitializePCM(System.Int32)">
      <summary>
            Initializes the PCM.
            </summary>
      <param name="id">The identifier.</param>
      <returns></returns>
    </member>
    <member name="M:HAL.Simulator.SimData.InitializePDP(System.Int32)">
      <summary>
            Initializes a new PDP.
            </summary>
      <param name="id">The identifier.</param>
      <returns>True if new PDP was created, otherwise false</returns>
    </member>
    <member name="P:HAL.Simulator.SimData.MXP">
      <summary></summary>
    </member>
    <member name="P:HAL.Simulator.SimData.NavXData"></member>
    <member name="E:HAL.Simulator.SimData.OnPCMAdded">
      <summary>
            Occurs when a PCM is added.
            </summary>
    </member>
    <member name="E:HAL.Simulator.SimData.OnPDPAdded">
      <summary>
            Occurs when a PDP is added.
            </summary>
    </member>
    <member name="E:HAL.Simulator.SimData.OnTalonSRXAddedOrRemoved">
      <summary>
            Occurs on talon SRX added or removed.
            </summary>
    </member>
    <member name="P:HAL.Simulator.SimData.PWM">
      <summary></summary>
    </member>
    <member name="P:HAL.Simulator.SimData.Relay">
      <summary>
            Gets the relay.
            </summary>
    </member>
    <member name="M:HAL.Simulator.SimData.RemoveCanTalon(System.Int32)">
      <summary>
            Removes the can talon.
            </summary>
      <param name="id">The identifier.</param>
    </member>
    <member name="P:HAL.Simulator.SimData.Reports">
      <summary>
            Gets the reports.
            </summary>
    </member>
    <member name="M:HAL.Simulator.SimData.ResetHALData(System.Boolean)">
      <summary>
            Clears all HAL Sim Data and resets it.
            </summary>
      <param name="resetDS">If true, resets the DS data sempahore.</param>
    </member>
    <member name="P:HAL.Simulator.SimData.RoboRioData">
      <summary>
            Gets the robo rio data.
            </summary>
    </member>
    <member name="P:HAL.Simulator.SimData.SPIAccelerometer"></member>
    <member name="P:HAL.Simulator.SimData.SPIAccumulator"></member>
    <member name="T:HAL.Simulator.SimHooks">
      <summary>
            This class contains static hooks that can be used by simulators to get specific Data.
            </summary>
    </member>
    <member name="M:HAL.Simulator.SimHooks.DelayMillis(System.Double)">
      <summary>
            Delays the current thread by a number of milliseconds.
            </summary>
      <param name="ms">Delay time</param>
    </member>
    <member name="M:HAL.Simulator.SimHooks.DelaySeconds(System.Double)">
      <summary>
            Delays the current thread by a number of seconds.
            </summary>
      <param name="s">Delay time</param>
    </member>
    <member name="M:HAL.Simulator.SimHooks.GetFPGATime">
      <summary>
            Gets the FPGA time.
            </summary>
      <returns>The FPGA time on a 10 nanosecond scale.</returns>
    </member>
    <member name="M:HAL.Simulator.SimHooks.GetFPGATimestamp">
      <summary>
            Gets the FPGA time in seconds.
            </summary>
      <returns>The FPGA time in seconds</returns>
    </member>
    <member name="M:HAL.Simulator.SimHooks.GetTime">
      <summary>
            Gets the current number of 100 nanosecond ticks from the system.
            </summary>
      <returns></returns>
    </member>
    <member name="M:HAL.Simulator.SimHooks.WaitForProgramStart">
      <summary>
            Waits for the robot program to say it has started. In the 2 primary robot bases, this is called when RobotInit returns.
            </summary>
    </member>
    <member name="T:HAL.Simulator.TalonSRXEventArgs"></member>
    <member name="M:HAL.Simulator.TalonSRXEventArgs.#ctor(System.Boolean)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Simulator.TalonSRXEventArgs</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:HAL.Simulator.TalonSRXEventArgs.Added"></member>
    <member name="T:HAL.Simulator.Data.AccelerometerData">
      <summary>
            Accelerometer Sim Data
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.AccelerometerData.Active">
      <summary>
            Gets a value indicating whether this <see cref="T:HAL.Simulator.Data.AccelerometerData" /> is active.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.AccelerometerData.Range">
      <summary>
            Gets the range.
            </summary>
    </member>
    <member name="M:HAL.Simulator.Data.AccelerometerData.ResetData">
      <summary>
            Resets the data for the specified set of data.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.AccelerometerData.X">
      <summary>
            Gets or sets the X Axis on the accelerometer
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.AccelerometerData.Y">
      <summary>
            Gets or sets the y axis on the accelerometer.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.AccelerometerData.Z">
      <summary>
            Gets or sets the z axis on the accelerometer.
            </summary>
    </member>
    <member name="T:HAL.Simulator.Data.AnalogInData">
      <summary>
            Analog Input Sim Data
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.AnalogInData.AccumulatorCenter">
      <summary>
            Gets the accumulator center.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.AnalogInData.AccumulatorCount">
      <summary>
            Gets or sets the accumulator count.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.AnalogInData.AccumulatorDeadband">
      <summary>
            Gets the accumulator deadband.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.AnalogInData.AccumulatorInitialized">
      <summary>
            Gets a value indicating whether [accumulator initialized].
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.AnalogInData.AccumulatorValue">
      <summary>
            Gets or sets the accumulator value.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.AnalogInData.AverageBits">
      <summary>
            Gets the average bits.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.AnalogInData.Initialized">
      <summary>
            Gets a value indicating whether this input is initialized.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.AnalogInData.LSBWeight">
      <summary>
            Gets or sets the LSB weight.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.AnalogInData.Offset">
      <summary>
            Gets or sets the offset.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.AnalogInData.OversampleBits">
      <summary>
            Gets the oversample bits.
            </summary>
    </member>
    <member name="M:HAL.Simulator.Data.AnalogInData.ResetData">
      <summary>
            Resets the data for the specified set of data.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.AnalogInData.Voltage">
      <summary>
            Gets or sets the voltage.
            </summary>
    </member>
    <member name="T:HAL.Simulator.Data.AnalogOutData">
      <summary>
            Analog Output Sim Data
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.AnalogOutData.Initialized">
      <summary>
            Gets a value indicating whether this <see cref="T:HAL.Simulator.Data.AnalogOutData" /> is initialized.
            </summary>
    </member>
    <member name="M:HAL.Simulator.Data.AnalogOutData.ResetData">
      <summary>
            Resets the data for the specified set of data.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.AnalogOutData.Voltage">
      <summary>
            Gets the voltage.
            </summary>
    </member>
    <member name="T:HAL.Simulator.Data.AnalogTriggerData">
      <summary>
            Analog Trigger Sim Data.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.AnalogTriggerData.AnalogPin">
      <summary>
            Gets the analog pin.
            </summary>
    </member>
    <member name="M:HAL.Simulator.Data.AnalogTriggerData.GetTriggerValue(HAL.Base.AnalogTriggerType,System.Int32@)">
      <summary>
            Gets the trigger value.
            </summary>
      <param name="type">The type.</param>
      <param name="status">The status.</param>
      <returns></returns>
    </member>
    <member name="P:HAL.Simulator.Data.AnalogTriggerData.Initialized">
      <summary>
            Gets a value indicating whether this <see cref="T:HAL.Simulator.Data.AnalogTriggerData" /> is initialized.
            </summary>
    </member>
    <member name="M:HAL.Simulator.Data.AnalogTriggerData.ResetData">
      <summary>
            Resets the data for the specified set of data.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.AnalogTriggerData.TriggerPointer">
      <summary>
            Gets the trigger pointer.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.AnalogTriggerData.TrigLower">
      <summary>
            Gets the trig lower.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.AnalogTriggerData.TrigState">
      <summary>
            Gets a value indicating whether [trig state].
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.AnalogTriggerData.TrigType">
      <summary>
            Gets the type of the trig.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.AnalogTriggerData.TrigUpper">
      <summary>
            Gets the trig upper.
            </summary>
    </member>
    <member name="T:HAL.Simulator.Data.CanTalonData">
      <summary>
            Talon SRX CAN Sim Data
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.AinPosition">
      <summary>
            Gets or sets the ain position.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.AnalogInVel">
      <summary>
            Gets or sets the analog in vel.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.AnalogInWithOv">
      <summary>
            Gets or sets the analog in with ov.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.AppliedThrottle">
      <summary>
            Gets or sets the applied throttle.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.BatteryV">
      <summary>
            Gets or sets the battery v.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.BrakeIsEnabled">
      <summary>
            Gets or sets a value indicating whether [brake is enabled].
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.CloseLoopErr">
      <summary>
            Gets or sets the close loop error.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.Current">
      <summary>
            Gets or sets the current.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.Demand">
      <summary>
            Gets or sets the demand.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.EncIndexRiseEvents">
      <summary>
            Gets or sets the enc index rise events.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.EncPosition">
      <summary>
            Gets or sets the enc position.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.EncVel">
      <summary>
            Gets or sets the enc vel.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.Fault_ForLim">
      <summary>
            Gets or sets the fault_ for lim.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.Fault_ForSoftLim">
      <summary>
            Gets or sets the fault_ for soft lim.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.Fault_HardwareFailure">
      <summary>
            Gets or sets the fault_ hardware failure.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.Fault_OverTemp">
      <summary>
            Gets or sets the fault_ over temporary.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.Fault_RevLim">
      <summary>
            Gets or sets the fault_ rev lim.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.Fault_RevSoftLim">
      <summary>
            Gets or sets the fault_ rev soft lim.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.Fault_UnderVoltage">
      <summary>
            Gets or sets the fault_ under voltage.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.FeedbackDeviceSelect">
      <summary>
            Gets or sets the feedback device select.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.FirmVers">
      <summary>
            Gets or sets the firm vers.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.LimitSwitchClosedFor">
      <summary>
            Gets or sets a value indicating whether [limit switch closed for].
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.LimitSwitchClosedRev">
      <summary>
            Gets or sets a value indicating whether [limit switch closed rev].
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.LimitSwitchEn">
      <summary>
            Gets or sets the limit switch en.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.ModeSelect">
      <summary>
            Gets or sets the mode select.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.NumberEncoderCPR">
      <summary>
            Gets or sets the number encoder CPR.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.NumberPotTurns">
      <summary>
            Gets or sets the number pot turns.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.OnBoot_BrakeMode">
      <summary>
            Gets or sets the on boot_ brake mode.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.OnBoot_LimitSwitch_Forward_Disable">
      <summary>
            Gets or sets the on boot_ limit switch_ forward_ disable.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.OnBoot_LimitSwitch_Forward_NormallyClosed">
      <summary>
            Gets or sets the on boot_ limit switch_ forward_ normally closed.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.OnBoot_LimitSwitch_Reverse_Disable">
      <summary>
            Gets or sets the on boot_ limit switch_ reverse_ disable.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.OnBoot_LimitSwitch_Reverse_NormallyClosed">
      <summary>
            Gets or sets the on boot_ limit switch_ reverse_ normally closed.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.OverrideBrakeType">
      <summary>
            Gets or sets the type of the override brake.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.OverrideLimitSwitch">
      <summary>
            Gets or sets the override limit switch.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.PercentVBusValue">
      <summary>
            Gets or sets the demand.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.PidIaccum">
      <summary>
            Gets or sets the pid iaccum.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.ProfileParamSlot0_AllowableClosedLoopErr">
      <summary>
            Gets or sets the profile parameter slot0_ allowable closed loop error.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.ProfileParamSlot0_CloseLoopRampRate">
      <summary>
            Gets or sets the profile parameter slot0_ close loop ramp rate.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.ProfileParamSlot0_D">
      <summary>
            Gets or sets the profile parameter slot0_ d.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.ProfileParamSlot0_F">
      <summary>
            Gets or sets the profile parameter slot0_ f.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.ProfileParamSlot0_I">
      <summary>
            Gets or sets the profile parameter slot0_ i.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.ProfileParamSlot0_IZone">
      <summary>
            Gets or sets the profile parameter slot0_ i zone.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.ProfileParamSlot0_P">
      <summary>
            Gets or sets the profile parameter slot0_ p.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.ProfileParamSlot1_AllowableClosedLoopErr">
      <summary>
            Gets or sets the profile parameter slot1_ allowable closed loop error.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.ProfileParamSlot1_CloseLoopRampRate">
      <summary>
            Gets or sets the profile parameter slot1_ close loop ramp rate.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.ProfileParamSlot1_D">
      <summary>
            Gets or sets the profile parameter slot1_ d.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.ProfileParamSlot1_F">
      <summary>
            Gets or sets the profile parameter slot1_ f.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.ProfileParamSlot1_I">
      <summary>
            Gets or sets the profile parameter slot1_ i.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.ProfileParamSlot1_IZone">
      <summary>
            Gets or sets the profile parameter slot1_ i zone.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.ProfileParamSlot1_P">
      <summary>
            Gets or sets the profile parameter slot1_ p.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.ProfileParamSoftLimitForEnable">
      <summary>
            Gets or sets the profile parameter soft limit for enable.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.ProfileParamSoftLimitForThreshold">
      <summary>
            Gets or sets the profile parameter soft limit for threshold.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.ProfileParamSoftLimitRevEnable">
      <summary>
            Gets or sets the profile parameter soft limit rev enable.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.ProfileParamSoftLimitRevThreshold">
      <summary>
            Gets or sets the profile parameter soft limit rev threshold.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.ProfileSlotSelect">
      <summary>
            Gets or sets the profile slot select.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.QuadApin">
      <summary>
            Gets or sets the quad apin.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.QuadBpin">
      <summary>
            Gets or sets the quad bpin.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.QuadFilterEn">
      <summary>
            Gets or sets the quad filter en.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.QuadIdxpin">
      <summary>
            Gets or sets the quad idxpin.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.RampThrottle">
      <summary>
            Gets or sets the ramp throttle.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.ResetCount">
      <summary>
            Gets or sets the reset count.
            </summary>
    </member>
    <member name="M:HAL.Simulator.Data.CanTalonData.ResetData">
      <summary>
            Resets the data for the specified set of data.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.ResetFlags">
      <summary>
            Gets or sets the reset flags.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.RevFeedbackSensor">
      <summary>
            Gets or sets a value indicating whether [rev feedback sensor].
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.RevMotDuringCloseLoopEn">
      <summary>
            Gets or sets a value indicating whether [rev mot during close loop en].
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.SensorPosition">
      <summary>
            Gets or sets the sensor position.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.SensorVelocity">
      <summary>
            Gets or sets the sensor velocity.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.SettingsChanged">
      <summary>
            Gets or sets the settings changed.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.StckyFault_ForLim">
      <summary>
            Gets or sets the stcky fault_ for lim.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.StckyFault_ForSoftLim">
      <summary>
            Gets or sets the stcky fault_ for soft lim.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.StckyFault_OverTemp">
      <summary>
            Gets or sets the stcky fault_ over temporary.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.StckyFault_RevLim">
      <summary>
            Gets or sets the stcky fault_ rev lim.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.StckyFault_RevSoftLim">
      <summary>
            Gets or sets the stcky fault_ rev soft lim.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.StckyFault_UnderVoltage">
      <summary>
            Gets or sets the stcky fault_ under voltage.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.Temp">
      <summary>
            Gets or sets the temperature.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CanTalonData.VoltageCompensationRate">
      <summary>
            Gets or sets the demand.
            </summary>
    </member>
    <member name="T:HAL.Simulator.Data.CompressorData">
      <summary>
            Compressor Sim Data
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CompressorData.CloseLoopEnabled">
      <summary>
            Gets a value indicating whether [close loop enabled].
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CompressorData.Current">
      <summary>
            Gets or sets the current.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CompressorData.Initialized">
      <summary>
            Gets a value indicating whether this <see cref="T:HAL.Simulator.Data.CompressorData" /> is initialized.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CompressorData.On">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:HAL.Simulator.Data.CompressorData" /> is on.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CompressorData.PressureSwitch">
      <summary>
            Gets or sets a value indicating whether [pressure switch].
            </summary>
    </member>
    <member name="M:HAL.Simulator.Data.CompressorData.ResetData">
      <summary>
            Resets the data for the specified set of data.
            </summary>
    </member>
    <member name="T:HAL.Simulator.Data.ControllerType">
      <summary>
            The type of PWM Controller
            </summary>
    </member>
    <member name="F:HAL.Simulator.Data.ControllerType.None">
      <summary>
            none
            </summary>
    </member>
    <member name="F:HAL.Simulator.Data.ControllerType.Jaguar">
      <summary>
            jaguar
            </summary>
    </member>
    <member name="F:HAL.Simulator.Data.ControllerType.Talon">
      <summary>
            talon
            </summary>
    </member>
    <member name="F:HAL.Simulator.Data.ControllerType.TalonSRX">
      <summary>
            talon SRX
            </summary>
    </member>
    <member name="F:HAL.Simulator.Data.ControllerType.Victor">
      <summary>
            victor
            </summary>
    </member>
    <member name="F:HAL.Simulator.Data.ControllerType.VictorSP">
      <summary>
            victor sp
            </summary>
    </member>
    <member name="F:HAL.Simulator.Data.ControllerType.Spark"></member>
    <member name="F:HAL.Simulator.Data.ControllerType.SD540"></member>
    <member name="F:HAL.Simulator.Data.ControllerType.Servo">
      <summary>
            servo
            </summary>
    </member>
    <member name="T:HAL.Simulator.Data.CounterData">
      <summary>
            Counter Sim Data
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CounterData.AverageSize">
      <summary>
            Gets the average size.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CounterData.DownCallback">
      <summary>
            Gets down callback.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CounterData.DownFallingEdge">
      <summary>
            Gets a value indicating whether [down falling edge].
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CounterData.DownRisingEdge">
      <summary>
            Gets a value indicating whether [down rising edge].
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CounterData.DownSourceChannel">
      <summary>
            Gets down source channel.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CounterData.DownSourceTrigger">
      <summary>
            Gets a value indicating whether [down source trigger].
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CounterData.Mode">
      <summary>
            Gets the mode.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CounterData.PulseLengthThreshold">
      <summary>
            Gets the pulse length threshold.
            </summary>
    </member>
    <member name="M:HAL.Simulator.Data.CounterData.ResetData">
      <summary>
            Resets the data for the specified set of data.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CounterData.UpCallback">
      <summary>
            Gets up callback.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CounterData.UpdateWhenEmpty">
      <summary>
            Gets a value indicating whether [update when empty].
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CounterData.UpFallingEdge">
      <summary>
            Gets a value indicating whether [up falling edge].
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CounterData.UpRisingEdge">
      <summary>
            Gets a value indicating whether [up rising edge].
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CounterData.UpSourceChannel">
      <summary>
            Gets up source channel.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.CounterData.UpSourceTrigger">
      <summary>
            Gets a value indicating whether [up source trigger].
            </summary>
    </member>
    <member name="T:HAL.Simulator.Data.DataBase">
      <summary>
            The data base, without a notifier
            </summary>
    </member>
    <member name="M:HAL.Simulator.Data.DataBase.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Simulator.Data.DataBase</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:HAL.Simulator.Data.DataBase.OnPropertyChanged(System.Object,System.String)">
      <summary>
            Called when any property is changed.
            </summary>
      <param name="value">The value.</param>
      <param name="propertyName">Name of the property.</param>
    </member>
    <member name="M:HAL.Simulator.Data.DataBase.ResetData">
      <summary>
            Resets the data for the specified set of data.
            </summary>
    </member>
    <member name="T:HAL.Simulator.Data.DigitalGlitchFilterData"></member>
    <member name="M:HAL.Simulator.Data.DigitalGlitchFilterData.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Simulator.Data.DigitalGlitchFilterData</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:HAL.Simulator.Data.DigitalGlitchFilterData.Enabled"></member>
    <member name="P:HAL.Simulator.Data.DigitalGlitchFilterData.Period"></member>
    <member name="M:HAL.Simulator.Data.DigitalGlitchFilterData.ResetData"></member>
    <member name="T:HAL.Simulator.Data.DigitalPWMData">
      <summary>
            Digital PWM Sim Data
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.DigitalPWMData.DutyCycle">
      <summary>
            Gets the duty cycle.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.DigitalPWMData.Initialized">
      <summary>
            Gets a value indicating whether this <see cref="T:HAL.Simulator.Data.DigitalPWMData" /> is initialized.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.DigitalPWMData.Pin">
      <summary>
            Gets the pin.
            </summary>
    </member>
    <member name="M:HAL.Simulator.Data.DigitalPWMData.ResetData">
      <summary>
            Resets the data for the specified set of data.
            </summary>
    </member>
    <member name="T:HAL.Simulator.Data.DIOData">
      <summary>
            DIO Sim Data
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.DIOData.FilterIndex"></member>
    <member name="P:HAL.Simulator.Data.DIOData.Initialized">
      <summary>
            Gets a value indicating whether this <see cref="T:HAL.Simulator.Data.DIOData" /> is initialized.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.DIOData.IsInput">
      <summary>
            Gets a value indicating whether this instance is input.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.DIOData.PulseLength">
      <summary>
            Gets the length of the pulse.
            </summary>
    </member>
    <member name="M:HAL.Simulator.Data.DIOData.ResetData">
      <summary>
            Resets the data for the specified set of data.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.DIOData.Value">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:HAL.Simulator.Data.DIOData" /> is value.
            </summary>
    </member>
    <member name="T:HAL.Simulator.Data.DriverStationData">
      <summary>
            Driver Station Sim Data
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.DriverStationData.AllianceStation">
      <summary>
            Gets or sets the alliance station.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.DriverStationData.ControlData">
      <summary>
            Gets the control data.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.DriverStationData.Joysticks">
      <summary>
            Gets the joysticks.
            </summary>
    </member>
    <member name="M:HAL.Simulator.Data.DriverStationData.ResetData">
      <summary>
            Resets the data for the specified set of data.
            </summary>
    </member>
    <member name="T:HAL.Simulator.Data.DSControlData">
      <summary>
            Driver Station Sim Control Data
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.DSControlData.Autonomous">
      <summary>
            Gets a value indicating whether this <see cref="T:HAL.Simulator.Data.DSControlData" /> is autonomous.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.DSControlData.DsAttached">
      <summary>
            Gets a value indicating whether [ds attached].
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.DSControlData.Enabled">
      <summary>
            Gets a value indicating whether this <see cref="T:HAL.Simulator.Data.DSControlData" /> is enabled.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.DSControlData.EStop">
      <summary>
            Gets a value indicating whether [e stop].
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.DSControlData.FmsAttached">
      <summary>
            Gets a value indicating whether [FMS attached].
            </summary>
    </member>
    <member name="M:HAL.Simulator.Data.DSControlData.ResetData">
      <summary>
            Resets the data for the specified set of data.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.DSControlData.Test">
      <summary>
            Gets a value indicating whether this <see cref="T:HAL.Simulator.Data.DSControlData" /> is test.
            </summary>
    </member>
    <member name="T:HAL.Simulator.Data.EncoderData">
      <summary>
            Encoder Sim Data
            </summary>
    </member>
    <member name="F:HAL.Simulator.Data.EncoderData.Config">
      <summary>
            The configuration
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.EncoderData.Count">
      <summary>
            Gets or sets the count.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.EncoderData.Direction">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:HAL.Simulator.Data.EncoderData" /> is direction.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.EncoderData.Initialized">
      <summary>
            Gets a value indicating whether this <see cref="T:HAL.Simulator.Data.EncoderData" /> is initialized.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.EncoderData.MaxPeriod">
      <summary>
            Gets the maximum period.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.EncoderData.Period">
      <summary>
            Gets or sets the period.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.EncoderData.Reset">
      <summary>
            Gets a value indicating whether this <see cref="T:HAL.Simulator.Data.EncoderData" /> is reset.
            </summary>
    </member>
    <member name="M:HAL.Simulator.Data.EncoderData.ResetData">
      <summary>
            Resets the data for the specified set of data.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.EncoderData.ReverseDirection">
      <summary>
            Gets a value indicating whether [reverse direction].
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.EncoderData.SamplesToAverage">
      <summary>
            Gets the samples to average.
            </summary>
    </member>
    <member name="T:HAL.Simulator.Data.GlobalData">
      <summary>
            Global Sim Robot Data
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.GlobalData.AnalogSampleRate">
      <summary>
            Gets the analog sample rate.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.GlobalData.DigitalPWMRate">
      <summary>
            Gets the digital PWM rate.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.GlobalData.ProgramStarted">
      <summary>
            Gets or sets a value indicating whether [program started].
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.GlobalData.PWMLoopTiming">
      <summary>
            Gets or sets the PWM loop timing.
            </summary>
    </member>
    <member name="M:HAL.Simulator.Data.GlobalData.ResetData">
      <summary>
            Resets the data for the specified set of data.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.GlobalData.UserProgramState">
      <summary>
            Gets or sets the state of the user program.
            </summary>
    </member>
    <member name="T:HAL.Simulator.Data.JoystickData">
      <summary>
            Joystick Sim Data
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.JoystickData.Axes">
      <summary>
            Gets the axes.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.JoystickData.Buttons">
      <summary>
            Gets the buttons.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.JoystickData.IsXbox">
      <summary>
            Gets the is xbox.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.JoystickData.LeftRumble">
      <summary>
            Gets the left rumble.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.JoystickData.Name">
      <summary>
            Gets the name.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.JoystickData.NumAxes">
      <summary>
            Gets the axes.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.JoystickData.NumButtons">
      <summary>
            Gets the buttons.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.JoystickData.NumPovs">
      <summary>
            Gets the axes.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.JoystickData.Povs">
      <summary>
            Gets the povs.
            </summary>
    </member>
    <member name="M:HAL.Simulator.Data.JoystickData.ResetData">
      <summary>
            Resets the data for the specified set of data.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.JoystickData.RightRumble">
      <summary>
            Gets the right rumble.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.JoystickData.Type">
      <summary>
            Gets the type.
            </summary>
    </member>
    <member name="T:HAL.Simulator.Data.MXPData">
      <summary>
            MXP Sim Data
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.MXPData.Initialized">
      <summary>
            Gets a value indicating whether this <see cref="T:HAL.Simulator.Data.MXPData" /> is initialized.
            </summary>
    </member>
    <member name="M:HAL.Simulator.Data.MXPData.ResetData">
      <summary>
            Resets the data for the specified set of data.
            </summary>
    </member>
    <member name="T:HAL.Simulator.Data.NavXData"></member>
    <member name="M:HAL.Simulator.Data.NavXData.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Simulator.Data.NavXData</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:HAL.Simulator.Data.NavXData.AccelX"></member>
    <member name="P:HAL.Simulator.Data.NavXData.AccelY"></member>
    <member name="P:HAL.Simulator.Data.NavXData.AccelZ"></member>
    <member name="P:HAL.Simulator.Data.NavXData.GyroAnglePitch"></member>
    <member name="P:HAL.Simulator.Data.NavXData.GyroAngleRoll"></member>
    <member name="P:HAL.Simulator.Data.NavXData.GyroAngleYaw"></member>
    <member name="P:HAL.Simulator.Data.NavXData.GyroRatePitch"></member>
    <member name="P:HAL.Simulator.Data.NavXData.GyroRateRoll"></member>
    <member name="P:HAL.Simulator.Data.NavXData.GyroRateYaw"></member>
    <member name="M:HAL.Simulator.Data.NavXData.ResetData"></member>
    <member name="T:HAL.Simulator.Data.NotifyDataBase">
      <summary>
            Data base with a notifier
            </summary>
    </member>
    <member name="M:HAL.Simulator.Data.NotifyDataBase.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Simulator.Data.NotifyDataBase</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:HAL.Simulator.Data.NotifyDataBase.Cancel(System.String,System.Action{System.String,System.Object})">
      <summary>
            Cancel a notify function
            </summary>
      <param name="key">The key the function is waiting for</param>
      <param name="action">The callback function to cancel.</param>
    </member>
    <member name="M:HAL.Simulator.Data.NotifyDataBase.OnPropertyChanged(System.Object,System.String)">
      <summary>
            Called when any property is changed.
            </summary>
      <param name="value">The value.</param>
      <param name="propertyName">Name of the property.</param>
    </member>
    <member name="M:HAL.Simulator.Data.NotifyDataBase.Register(System.String,System.Action{System.String,System.Object},System.Boolean)">
      <summary>
            Registers the specified key with a callback.
            </summary>
      <param name="key">The key.</param>
      <param name="action">The callabac.</param>
      <param name="initialNotify">if set to <c>true</c> [initial notify].</param>
    </member>
    <member name="M:HAL.Simulator.Data.NotifyDataBase.ResetData">
      <summary>
            Resets the data for the specified set of data.
            </summary>
    </member>
    <member name="T:HAL.Simulator.Data.PCMData">
      <summary>
            PCM Sim Data
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.PCMData.Compressor">
      <summary>
            Gets the compressor.
            </summary>
    </member>
    <member name="M:HAL.Simulator.Data.PCMData.ResetData">
      <summary>
            Resets the data for the specified set of data.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.PCMData.Solenoids">
      <summary>
            Gets the solenoids.
            </summary>
    </member>
    <member name="T:HAL.Simulator.Data.PDPData">
      <summary>
            PDP Sim Data
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.PDPData.Current">
      <summary>
            Gets the current.
            </summary>
    </member>
    <member name="M:HAL.Simulator.Data.PDPData.ResetData">
      <summary>
            Resets the data for the specified set of data.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.PDPData.Temperature">
      <summary>
            Gets or sets the temperature.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.PDPData.TotalEnergy">
      <summary>
            Gets or sets the total energy.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.PDPData.Voltage">
      <summary>
            Gets or sets the voltage.
            </summary>
    </member>
    <member name="T:HAL.Simulator.Data.ProgramState">
      <summary>
            The robot program state
            </summary>
    </member>
    <member name="F:HAL.Simulator.Data.ProgramState.None"></member>
    <member name="F:HAL.Simulator.Data.ProgramState.Starting"></member>
    <member name="F:HAL.Simulator.Data.ProgramState.Disabled"></member>
    <member name="F:HAL.Simulator.Data.ProgramState.Autonomous"></member>
    <member name="F:HAL.Simulator.Data.ProgramState.Teleop"></member>
    <member name="F:HAL.Simulator.Data.ProgramState.Test"></member>
    <member name="T:HAL.Simulator.Data.PWMData">
      <summary>
            PWM Sim Data
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.PWMData.Initialized">
      <summary>
            Gets a value indicating whether this <see cref="T:HAL.Simulator.Data.PWMData" /> is initialized.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.PWMData.PeriodScale">
      <summary>
            Gets the period scale.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.PWMData.RawValue">
      <summary>
            Gets the raw value.
            </summary>
    </member>
    <member name="M:HAL.Simulator.Data.PWMData.ResetData">
      <summary>
            Resets the data for the specified set of data.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.PWMData.Type">
      <summary>
            Gets the type.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.PWMData.Value">
      <summary>
            Gets the value.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.PWMData.ZeroLatch">
      <summary>
            Gets a value indicating whether [zero latch].
            </summary>
    </member>
    <member name="T:HAL.Simulator.Data.RelayData">
      <summary>
            Relay Sim Data
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.RelayData.Forward">
      <summary>
            Gets a value indicating whether this <see cref="T:HAL.Simulator.Data.RelayData" /> is forward.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.RelayData.Initialized">
      <summary>
            Gets a value indicating whether this <see cref="T:HAL.Simulator.Data.RelayData" /> is initialized.
            </summary>
    </member>
    <member name="M:HAL.Simulator.Data.RelayData.ResetData">
      <summary>
            Resets the data for the specified set of data.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.RelayData.Reverse">
      <summary>
            Gets a value indicating whether this <see cref="T:HAL.Simulator.Data.RelayData" /> is reverse.
            </summary>
    </member>
    <member name="T:HAL.Simulator.Data.RoboRioData">
      <summary>
            RoboRIO Sim Data
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.RoboRioData.FPGAButton">
      <summary>
            Gets or sets a value indicating whether [fpga button].
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.RoboRioData.HasSource">
      <summary>
            Gets or sets a value indicating whether this instance has source.
            </summary>
    </member>
    <member name="M:HAL.Simulator.Data.RoboRioData.ResetData">
      <summary>
            Resets the data for the specified set of data.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.RoboRioData.UserActive3V3">
      <summary>
            Gets or sets a value indicating whether [user active3 v3].
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.RoboRioData.UserActive5V">
      <summary>
            Gets or sets a value indicating whether [user active5 v].
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.RoboRioData.UserActive6V">
      <summary>
            Gets or sets a value indicating whether [user active6 v].
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.RoboRioData.UserCurrent3V3"></member>
    <member name="P:HAL.Simulator.Data.RoboRioData.UserCurrent5V">
      <summary>
            Gets or sets the user current5 v.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.RoboRioData.UserCurrent6V">
      <summary>
            Gets or sets the user current6 v.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.RoboRioData.UserFaults3V3">
      <summary>
            Gets or sets the user faults3 v3.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.RoboRioData.UserFaults5V">
      <summary>
            Gets or sets the user faults5 v.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.RoboRioData.UserFaults6V">
      <summary>
            Gets or sets the user faults6 v.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.RoboRioData.UserVoltage3V3">
      <summary>
            Gets or sets the user voltage3 v3.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.RoboRioData.UserVoltage5V">
      <summary>
            Gets or sets the user voltage5 v.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.RoboRioData.UserVoltage6V">
      <summary>
            Gets or sets the user voltage6 v.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.RoboRioData.VInCurrent">
      <summary>
            Gets or sets the v in current.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.RoboRioData.VInVoltage">
      <summary>
            Gets or sets the v in voltage.
            </summary>
    </member>
    <member name="T:HAL.Simulator.Data.SolenoidData">
      <summary>
            Solenoid Sim Data
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.SolenoidData.Initialized">
      <summary>
            Gets a value indicating whether this <see cref="T:HAL.Simulator.Data.SolenoidData" /> is initialized.
            </summary>
    </member>
    <member name="M:HAL.Simulator.Data.SolenoidData.ResetData">
      <summary>
            Resets the data for the specified set of data.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.SolenoidData.Value">
      <summary>
            Gets a value indicating whether this <see cref="T:HAL.Simulator.Data.SolenoidData" /> is value.
            </summary>
    </member>
    <member name="T:HAL.Simulator.Data.SPIAccelerometerData"></member>
    <member name="P:HAL.Simulator.Data.SPIAccelerometerData.Active">
      <summary>
            Gets a value indicating whether this <see cref="T:HAL.Simulator.Data.AccelerometerData" /> is active.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.SPIAccelerometerData.Range">
      <summary>
            Gets the range.
            </summary>
    </member>
    <member name="M:HAL.Simulator.Data.SPIAccelerometerData.ResetData">
      <summary>
            Resets the data for the specified set of data.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.SPIAccelerometerData.X">
      <summary>
            Gets or sets the X Axis on the accelerometer
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.SPIAccelerometerData.Y">
      <summary>
            Gets or sets the y axis on the accelerometer.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.SPIAccelerometerData.Z">
      <summary>
            Gets or sets the z axis on the accelerometer.
            </summary>
    </member>
    <member name="T:HAL.Simulator.Data.SPIAccumulatorData"></member>
    <member name="P:HAL.Simulator.Data.SPIAccumulatorData.AccumulatorCount">
      <summary>
            Gets or sets the accumulator count.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.SPIAccumulatorData.AccumulatorValue">
      <summary>
            Gets or sets the accumulator value.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Data.SPIAccumulatorData.Initialized">
      <summary>
            Gets a value indicating whether this input is initialized.
            </summary>
    </member>
    <member name="M:HAL.Simulator.Data.SPIAccumulatorData.ResetData"></member>
    <member name="T:HAL.Simulator.Data.TrigerType">
      <summary>
            The analog trigger type.
            </summary>
    </member>
    <member name="F:HAL.Simulator.Data.TrigerType.Filtered">
      <summary>
            filtered
            </summary>
    </member>
    <member name="F:HAL.Simulator.Data.TrigerType.Averaged">
      <summary>
            averaged
            </summary>
    </member>
    <member name="F:HAL.Simulator.Data.TrigerType.Unassigned">
      <summary>
            unassigned
            </summary>
    </member>
    <member name="T:HAL.Simulator.Extensions.ConversionExtensions">
      <summary>
            Extension methods that are used to easily convert numbers between units.
            </summary>
    </member>
    <member name="M:HAL.Simulator.Extensions.ConversionExtensions.RadiansPerSecondToRpms(System.Double)">
      <summary>
            Converts Radians Per Second to Rotations Per Minute
            </summary>
      <param name="radiansPerSecond">Radians Per Second</param>
      <returns>Rotations Per Minute</returns>
    </member>
    <member name="M:HAL.Simulator.Extensions.ConversionExtensions.RpmsToRadiansPerSecond(System.Double)">
      <summary>
            Converts Rotations Per Minute to Radians Per Second.
            </summary>
      <param name="rpms">Rotations Per Minute</param>
      <returns>Radians Per Second</returns>
    </member>
    <member name="M:HAL.Simulator.Extensions.ConversionExtensions.ToDegrees(System.Double)">
      <summary>
            Converts radians to degrees.
            </summary>
      <param name="radians">Radians</param>
      <returns>Degrees</returns>
    </member>
    <member name="M:HAL.Simulator.Extensions.ConversionExtensions.ToInches(System.Double)">
      <summary>
            Meters to Inches.
            </summary>
      <param name="meters">Meters</param>
      <returns>Inches</returns>
    </member>
    <member name="M:HAL.Simulator.Extensions.ConversionExtensions.ToMeters(System.Double)">
      <summary>
            Inches to Meters.
            </summary>
      <param name="inches">Inches</param>
      <returns>Meters</returns>
    </member>
    <member name="M:HAL.Simulator.Extensions.ConversionExtensions.ToRadians(System.Double)">
      <summary>
            Converts degrees to radians.
            </summary>
      <param name="degrees">Degrees</param>
      <returns>Radians</returns>
    </member>
    <member name="T:HAL.Simulator.Inputs.EncodingType">
      <summary>
            Encoding Types for Counters and Encoders.
            </summary>
    </member>
    <member name="F:HAL.Simulator.Inputs.EncodingType.K1X"></member>
    <member name="F:HAL.Simulator.Inputs.EncodingType.K2X"></member>
    <member name="F:HAL.Simulator.Inputs.EncodingType.K4X"></member>
    <member name="T:HAL.Simulator.Inputs.IServoFeedback"></member>
    <member name="M:HAL.Simulator.Inputs.IServoFeedback.SetPosition(System.Double)"></member>
    <member name="M:HAL.Simulator.Inputs.IServoFeedback.SetRate(System.Double)"></member>
    <member name="T:HAL.Simulator.Inputs.SimAnalogGyro"></member>
    <member name="M:HAL.Simulator.Inputs.SimAnalogGyro.#ctor(System.Int32)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Simulator.Inputs.SimAnalogGyro</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:HAL.Simulator.Inputs.SimAnalogGyro.SetPosition(System.Double)"></member>
    <member name="M:HAL.Simulator.Inputs.SimAnalogGyro.SetRate(System.Double)"></member>
    <member name="T:HAL.Simulator.Inputs.SimAnalogInput"></member>
    <member name="M:HAL.Simulator.Inputs.SimAnalogInput.#ctor(System.Int32)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Simulator.Inputs.SimAnalogInput</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:HAL.Simulator.Inputs.SimAnalogInput.GetVoltage"></member>
    <member name="M:HAL.Simulator.Inputs.SimAnalogInput.SetPosition(System.Double)"></member>
    <member name="M:HAL.Simulator.Inputs.SimAnalogInput.SetRate(System.Double)"></member>
    <member name="T:HAL.Simulator.Inputs.SimCounter"></member>
    <member name="M:HAL.Simulator.Inputs.SimCounter.#ctor(System.Int32)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Simulator.Inputs.SimCounter</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:HAL.Simulator.Inputs.SimCounter.SetPosition(System.Double)"></member>
    <member name="M:HAL.Simulator.Inputs.SimCounter.SetRate(System.Double)"></member>
    <member name="T:HAL.Simulator.Inputs.SimDigitalInput"></member>
    <member name="M:HAL.Simulator.Inputs.SimDigitalInput.#ctor(System.Int32)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Simulator.Inputs.SimDigitalInput</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:HAL.Simulator.Inputs.SimDigitalInput.GetInput"></member>
    <member name="M:HAL.Simulator.Inputs.SimDigitalInput.Set(System.Boolean)"></member>
    <member name="T:HAL.Simulator.Inputs.SimEncoder"></member>
    <member name="M:HAL.Simulator.Inputs.SimEncoder.#ctor(System.Int32,HAL.Simulator.Inputs.EncodingType)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Simulator.Inputs.SimEncoder</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:HAL.Simulator.Inputs.SimEncoder.IsEncoder"></member>
    <member name="M:HAL.Simulator.Inputs.SimEncoder.SetPosition(System.Double)"></member>
    <member name="M:HAL.Simulator.Inputs.SimEncoder.SetRate(System.Double)"></member>
    <member name="T:HAL.Simulator.Inputs.SimNavXGyro"></member>
    <member name="M:HAL.Simulator.Inputs.SimNavXGyro.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Simulator.Inputs.SimNavXGyro</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:HAL.Simulator.Inputs.SimNavXGyro.SetPosition(System.Double)"></member>
    <member name="M:HAL.Simulator.Inputs.SimNavXGyro.SetRate(System.Double)"></member>
    <member name="T:HAL.Simulator.Inputs.SimSPIGyro"></member>
    <member name="M:HAL.Simulator.Inputs.SimSPIGyro.#ctor(HAL.Simulator.Inputs.SPIPorts)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Simulator.Inputs.SimSPIGyro</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:HAL.Simulator.Inputs.SimSPIGyro.SetPosition(System.Double)"></member>
    <member name="M:HAL.Simulator.Inputs.SimSPIGyro.SetRate(System.Double)"></member>
    <member name="T:HAL.Simulator.Inputs.SPIPorts">
      <summary>
            The SPI ports available to the simulator
            </summary>
    </member>
    <member name="F:HAL.Simulator.Inputs.SPIPorts.OnboardCS0"></member>
    <member name="F:HAL.Simulator.Inputs.SPIPorts.OnboardCS1"></member>
    <member name="F:HAL.Simulator.Inputs.SPIPorts.OnboardCS2"></member>
    <member name="F:HAL.Simulator.Inputs.SPIPorts.OnboardCS3"></member>
    <member name="F:HAL.Simulator.Inputs.SPIPorts.MXP"></member>
    <member name="T:HAL.Simulator.Mechanisms.AngularEncoderMechanism">
      <summary>
            This class is used to create a simulated arm that is driven by an encoder.
            </summary>
    </member>
    <member name="M:HAL.Simulator.Mechanisms.AngularEncoderMechanism.#ctor(HAL.Simulator.Outputs.ISimSpeedController,HAL.Simulator.Inputs.SimEncoder,System.Double,HAL.Simulator.Outputs.DCMotor,System.Double,System.Boolean)">
      <summary>
            Creates a new arm which is driven by an encoder
            </summary>
      <param name="input">The motor driving the system</param>
      <param name="output">The encoder giving feedback to the system</param>
      <param name="encoderCPR">The CPR of the encoder. If not a 1:1 ratio on the axle, scale this beforehand</param>
      <param name="model">The transmission model to use</param>
      <param name="startRotations">The location in rotations you want the system to start at.</param>
      <param name="invertInput">Inverts the motor input</param>
    </member>
    <member name="P:HAL.Simulator.Mechanisms.AngularEncoderMechanism.AdjustedRadians">
      <summary>
            Gets the current radians of the system offset by the homing location
            </summary>
    </member>
    <member name="P:HAL.Simulator.Mechanisms.AngularEncoderMechanism.AdjustedRotations">
      <summary>
            Gets the current rotations of the system offset by the homing location
            </summary>
    </member>
    <member name="M:HAL.Simulator.Mechanisms.AngularEncoderMechanism.SetHomeLocation(HAL.Simulator.Inputs.SimDigitalInput,System.Boolean,System.Double,System.Double)">
      <summary>
            Sets the homing location for the system
            </summary>
      <param name="homeInput">The input to use for checking home</param>
      <param name="rising">Check on rising edge</param>
      <param name="radians">The radian to home at, in relation to starting radians</param>
      <param name="threshold">The threshold allowed to be considered in range</param>
    </member>
    <member name="M:HAL.Simulator.Mechanisms.AngularEncoderMechanism.Update(System.Double)">
      <summary>
            Updates the system, checking for home and using the offset to get adjusted radians
            </summary>
      <param name="seconds">The seconds passed in the current iteration</param>
    </member>
    <member name="T:HAL.Simulator.Mechanisms.AngularPotentiometerMechanism">
      <summary>
            This class is used to create a simulated arm that is driven by a potentiometer.
            </summary>
    </member>
    <member name="M:HAL.Simulator.Mechanisms.AngularPotentiometerMechanism.#ctor(HAL.Simulator.Outputs.ISimSpeedController,HAL.Simulator.Inputs.SimAnalogInput,HAL.Simulator.Outputs.DCMotor,System.Double,System.Double,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:HAL.Simulator.Mechanisms.AngularPotentiometerMechanism" /> class.
            </summary>
      <param name="input">The motor driving the system</param>
      <param name="output">The Analog Input giving feedback to the system..</param>
      <param name="model">The motor model.</param>
      <param name="startPercentage">The starting percentage of the potentiometer from 0.</param>
      <param name="potentiometerRotations">The number of rotations the potentiometer has.</param>
      <param name="invertInput">if set to <c>true</c> [invert input].</param>
    </member>
    <member name="T:HAL.Simulator.Mechanisms.DriveWheelMechanism">
      <summary></summary>
    </member>
    <member name="M:HAL.Simulator.Mechanisms.DriveWheelMechanism.#ctor(HAL.Simulator.Outputs.DCMotor,HAL.Simulator.Outputs.ISimSpeedController,System.Double,System.Double,HAL.Simulator.Inputs.IServoFeedback,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:HAL.Simulator.Mechanisms.DriveWheelMechanism" /> class.
            </summary>
      <param name="motor">The motor.</param>
      <param name="input">The input.</param>
      <param name="wheelbaseXM">The wheelbase xm.</param>
      <param name="wheelDiameterM">The wheel diameter m.</param>
      <param name="output">The output.</param>
      <param name="wheelStaticCoef">The wheel static coef.</param>
      <param name="wheelDynamicCoef">The wheel dynamic coef.</param>
      <param name="staticFriction">The static friction.</param>
      <param name="dynamicFriction">The dynamic friction.</param>
    </member>
    <member name="M:HAL.Simulator.Mechanisms.DriveWheelMechanism.#ctor(HAL.Simulator.Outputs.DCMotor,HAL.Simulator.Outputs.ISimSpeedController,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:HAL.Simulator.Mechanisms.DriveWheelMechanism" /> class.
            </summary>
      <param name="motor">The motor.</param>
      <param name="input">The input.</param>
      <param name="wheelbaseXM">The wheelbase xm.</param>
      <param name="wheelDiameterM">The wheel diameter m.</param>
      <param name="wheelStaticCoef">The wheel static coef.</param>
      <param name="wheelDynamicCoef">The wheel dynamic coef.</param>
      <param name="staticFriction">The static friction.</param>
      <param name="dynamicFriction">The dynamic friction.</param>
    </member>
    <member name="P:HAL.Simulator.Mechanisms.DriveWheelMechanism.Acceleration">
      <summary>
            Gets or sets the acceleration.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Mechanisms.DriveWheelMechanism.DynamicCoef">
      <summary>
            Gets or sets the dynamic coef.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Mechanisms.DriveWheelMechanism.DynamicFriction">
      <summary>
            Gets or sets the dynamic friction.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Mechanisms.DriveWheelMechanism.ForceApplied">
      <summary>
            Gets or sets the force applied.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Mechanisms.DriveWheelMechanism.MassLoad">
      <summary>
            Gets or sets the mass load.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Mechanisms.DriveWheelMechanism.MotorPower">
      <summary>
            Gets or sets the motor power.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Mechanisms.DriveWheelMechanism.RPosition">
      <summary>
            Gets or sets the r position.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Mechanisms.DriveWheelMechanism.Slipping">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:HAL.Simulator.Mechanisms.DriveWheelMechanism" /> is slipping.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Mechanisms.DriveWheelMechanism.StaticCoef">
      <summary>
            Gets or sets the static coef.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Mechanisms.DriveWheelMechanism.StaticFriction">
      <summary>
            Gets or sets the static friction.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Mechanisms.DriveWheelMechanism.Type">
      <summary>
            Gets or sets the type.
            </summary>
    </member>
    <member name="M:HAL.Simulator.Mechanisms.DriveWheelMechanism.Update(System.Double)"></member>
    <member name="M:HAL.Simulator.Mechanisms.DriveWheelMechanism.Update(System.Double,System.Double[],System.Double,System.Int32,System.Double[])">
      <summary>
            UUpdates the mechanism with the specified delta time
            </summary>
      <param name="seconds">The delta time in seconds.</param>
      <param name="driveAcceleration">The drive acceleration.</param>
      <param name="massKg">The mass kg.</param>
      <param name="numberOfWheels">The number of wheels.</param>
      <param name="botVel">The bot vel.</param>
    </member>
    <member name="P:HAL.Simulator.Mechanisms.DriveWheelMechanism.WheelDiameter">
      <summary>
            Gets or sets the wheel diameter.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Mechanisms.DriveWheelMechanism.XPosition">
      <summary>
            Gets or sets the x position.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Mechanisms.DriveWheelMechanism.YPosition">
      <summary>
            Gets or sets the y position.
            </summary>
    </member>
    <member name="T:HAL.Simulator.Mechanisms.FeedbackMechanismBase">
      <summary>
            The base class for all feedback mechanisms.
            </summary>
    </member>
    <member name="M:HAL.Simulator.Mechanisms.FeedbackMechanismBase.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Simulator.Mechanisms.FeedbackMechanismBase</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:HAL.Simulator.Mechanisms.FeedbackMechanismBase.CurrentMeters">
      <summary>
            Gets the current number of meters traveled using the Feedback Mechanism.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Mechanisms.FeedbackMechanismBase.CurrentRadians">
      <summary>
            Gets the current number of radians the motor has rotated from zero.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Mechanisms.FeedbackMechanismBase.CurrentRadiansPerSecond">
      <summary>
            Gets the current radians per second the mechanism is rotating at.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Mechanisms.FeedbackMechanismBase.CurrentRotations">
      <summary>
            Gets the current number of rotations the motor has rotated from zero.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Mechanisms.FeedbackMechanismBase.CurrentRotationsPerMinute">
      <summary>
            Gets the current rotations per minute the mechanism is rotating at.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Mechanisms.FeedbackMechanismBase.Deadzone">
      <summary>
            Gets or sets the deadzone for the motor to be considered stopped.
            </summary>
    </member>
    <member name="M:HAL.Simulator.Mechanisms.FeedbackMechanismBase.Limit(System.Double)">
      <summary>
            Limits the input value to be between -1 and 1, and sets to 0 if between the <see cref="P:HAL.Simulator.Mechanisms.FeedbackMechanismBase.Deadzone" /></summary>
      <param name="pwmValue">The PWM value to check</param>
      <returns>The properly limited PWM value.</returns>
    </member>
    <member name="F:HAL.Simulator.Mechanisms.FeedbackMechanismBase.m_input">
      <summary>
            The motor input for the mechanism.
            </summary>
    </member>
    <member name="F:HAL.Simulator.Mechanisms.FeedbackMechanismBase.m_invert">
      <summary>
            True if the motor should be inverted when read.
            </summary>
    </member>
    <member name="F:HAL.Simulator.Mechanisms.FeedbackMechanismBase.m_maxRadians">
      <summary>
            The maximum radians allowed for the transmission output.
            </summary>
    </member>
    <member name="F:HAL.Simulator.Mechanisms.FeedbackMechanismBase.m_minRadians">
      <summary>
            The minimum radians allowed for the transmission output.
            </summary>
    </member>
    <member name="F:HAL.Simulator.Mechanisms.FeedbackMechanismBase.m_model">
      <summary>
            The motor and transmission model for the system.
            </summary>
    </member>
    <member name="F:HAL.Simulator.Mechanisms.FeedbackMechanismBase.m_output">
      <summary>
            The feedback output for the mechanism.
            </summary>
    </member>
    <member name="F:HAL.Simulator.Mechanisms.FeedbackMechanismBase.m_scaler">
      <summary>
            The number used to scale motor radians to sensor outputs properly.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Mechanisms.FeedbackMechanismBase.RadiansPerMeter">
      <summary>
            Gets or sets the Radians traveled per meter moved.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Mechanisms.FeedbackMechanismBase.RotationsPerMeter">
      <summary>
            Gets the rotations traveled per meter moved.
            </summary>
    </member>
    <member name="M:HAL.Simulator.Mechanisms.FeedbackMechanismBase.Update(System.Double)">
      <summary>
            Updates the mechanism with the specified delta time
            </summary>
      <param name="seconds">The delta time in seconds.</param>
    </member>
    <member name="T:HAL.Simulator.Mechanisms.LinearEncoderMechanism">
      <summary>
            A simulator mechanism that can be used to run a linear system using an encoder.
            </summary>
    </member>
    <member name="M:HAL.Simulator.Mechanisms.LinearEncoderMechanism.#ctor(HAL.Simulator.Outputs.ISimSpeedController,HAL.Simulator.Inputs.SimEncoder,System.Double,HAL.Simulator.Outputs.DCMotor,System.Double,System.Double,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:HAL.Simulator.Mechanisms.LinearEncoderMechanism" /> class.
            </summary>
      <param name="input">The motor driving the system.</param>
      <param name="output">The encoder giving feedback to the system.</param>
      <param name="encoderCpr">The CPR of the encoder. If not a 1:1 ratio on the axle, scale this beforehand.</param>
      <param name="model">The transmission model to use.</param>
      <param name="spoolRadius">The radius of your spool in Meters. (Use the radius of the up spool if using a cascade elevator).</param>
      <param name="startHeight">The start height of your elevator relative to the reset sensor in meters. If no reset sensor then use 0.</param>
      <param name="invertInput">if set to <c>true</c> [invert input].</param>
    </member>
    <member name="M:HAL.Simulator.Mechanisms.LinearEncoderMechanism.SetHomeLocation(HAL.Simulator.Inputs.SimDigitalInput,System.Boolean,System.Double,System.Double)">
      <summary>
            Sets the homing sensor location.
            </summary>
      <param name="homeInput">The digital input to use for the homing sensor</param>
      <param name="rising">True if homing on the rising edge, otherwise false.</param>
      <param name="meters">The distance relative to your lowest elevator point the sensor is located at (in meters).</param>
      <param name="threshold">The threshold for which your encoder would trigger (in meters).</param>
    </member>
    <member name="M:HAL.Simulator.Mechanisms.LinearEncoderMechanism.Update(System.Double)">
      <summary>
            Updates the mechanism with the specified delta time
            </summary>
      <param name="seconds">The delta time in seconds.</param>
    </member>
    <member name="T:HAL.Simulator.Mechanisms.LinearPotentiometerMechanism">
      <summary></summary>
    </member>
    <member name="M:HAL.Simulator.Mechanisms.LinearPotentiometerMechanism.#ctor(HAL.Simulator.Outputs.ISimSpeedController,HAL.Simulator.Inputs.SimAnalogInput,HAL.Simulator.Outputs.DCMotor,System.Double,System.Double,System.Double,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:HAL.Simulator.Mechanisms.LinearPotentiometerMechanism" /> class.
            </summary>
      <param name="input">The motor driving the system.</param>
      <param name="output">The potentiometer giving feedback to the system.</param>
      <param name="model">The motor model with transmission to use.</param>
      <param name="startPercentage">The starting percentages of the potentiometer from 0.</param>
      <param name="stringTravel">The potentiometer travel scaled to be linear (in meters).</param>
      <param name="spoolRadius">The radius of your spool in Meters. (Use the radius of the up spool if using a cascade elevator).</param>
      <param name="invertInput">if set to <c>true</c> [invert input].</param>
    </member>
    <member name="T:HAL.Simulator.Mechanisms.ShooterWheelMechanism">
      <summary>
            Mechanism for simulating a shooter wheel.
            </summary>
    </member>
    <member name="M:HAL.Simulator.Mechanisms.ShooterWheelMechanism.#ctor(HAL.Simulator.Outputs.ISimSpeedController,HAL.Simulator.Inputs.IServoFeedback,HAL.Simulator.Outputs.DCMotor,System.Boolean,System.Double,System.Double,System.Double,System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:HAL.Simulator.Mechanisms.ShooterWheelMechanism" /> class.
            </summary>
      <param name="input">The speed controller being used.</param>
      <param name="output">The feedback output.</param>
      <param name="model">The motor model.</param>
      <param name="invertInput">True if the input is inverted.</param>
      <param name="minimumVelocity">The minimum velocity in Rotations Per Minute</param>
      <param name="deaccelConstant">The deaccel constant in Rotations Per Minute</param>
      <param name="systemInertia">The system inertia in kg*m^2.</param>
      <param name="cpr">The counts per rotation of the sensor.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">Shooter Wheels do not support analog inputs</exception>
    </member>
    <member name="P:HAL.Simulator.Mechanisms.ShooterWheelMechanism.CurrentRadiansPerSecond">
      <summary>
            Gets or sets the current radians per second.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Mechanisms.ShooterWheelMechanism.CurrentRotationsPerMinute">
      <summary>
            Gets the current rotations per minute.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Mechanisms.ShooterWheelMechanism.DeaccelerationConstant">
      <summary>
            Gets or sets the deacceleration constant.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Mechanisms.ShooterWheelMechanism.Deadzone">
      <summary>
            Gets or sets the deadzone.
            </summary>
    </member>
    <member name="M:HAL.Simulator.Mechanisms.ShooterWheelMechanism.Limit(System.Double)">
      <summary>
            Limits the specified PWM value.
            </summary>
      <param name="pwmValue">The PWM value.</param>
      <returns></returns>
    </member>
    <member name="F:HAL.Simulator.Mechanisms.ShooterWheelMechanism.m_cpr">
      <summary>
            The sensor CPR.
            </summary>
    </member>
    <member name="F:HAL.Simulator.Mechanisms.ShooterWheelMechanism.m_input">
      <summary>
            The motor driving the system.
            </summary>
    </member>
    <member name="F:HAL.Simulator.Mechanisms.ShooterWheelMechanism.m_invert">
      <summary>
            True if the input is inverted for your code.
            </summary>
    </member>
    <member name="F:HAL.Simulator.Mechanisms.ShooterWheelMechanism.m_minimumVelocity">
      <summary>
            The minimum velocity allowed for your shooter wheel. (radians per second)
            </summary>
    </member>
    <member name="F:HAL.Simulator.Mechanisms.ShooterWheelMechanism.m_model">
      <summary>
            The model of the motor and transmission for the system.
            </summary>
    </member>
    <member name="F:HAL.Simulator.Mechanisms.ShooterWheelMechanism.m_output">
      <summary>
            The feedback sensor for the system.
            </summary>
    </member>
    <member name="P:HAL.Simulator.Mechanisms.ShooterWheelMechanism.SystemInertia">
      <summary>
            Gets or sets the system inertia.
            </summary>
    </member>
    <member name="M:HAL.Simulator.Mechanisms.ShooterWheelMechanism.Update(System.Double)">
      <summary>
            Updates the mechanism with the specified delta time
            </summary>
      <param name="seconds">The delta time in seconds.</param>
    </member>
    <member name="T:HAL.Simulator.Mechanisms.TankDriveTrainMechanism"></member>
    <member name="M:HAL.Simulator.Mechanisms.TankDriveTrainMechanism.#ctor(HAL.Simulator.Mechanisms.DriveWheelMechanism,HAL.Simulator.Mechanisms.DriveWheelMechanism,System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:HAL.Simulator.Mechanisms.TankDriveTrainMechanism" /> class.
            </summary>
      <param name="leftDrive">The left drive.</param>
      <param name="rightDrive">The right drive.</param>
      <param name="massKg">The mass kg.</param>
    </member>
    <member name="M:HAL.Simulator.Mechanisms.TankDriveTrainMechanism.Update(System.Double)">
      <summary>
            Updates the mechanism with the specified delta time
            </summary>
      <param name="seconds">The delta sime in seconds.</param>
    </member>
    <member name="T:HAL.Simulator.Outputs.DCMotor"></member>
    <member name="M:HAL.Simulator.Outputs.DCMotor.#ctor(System.Double,System.Double)">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>HAL.Simulator.Outputs.DCMotor</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:HAL.Simulator.Outputs.DCMotor.Efficiency"></member>
    <member name="M:HAL.Simulator.Outputs.DCMotor.MakeBag"></member>
    <member name="M:HAL.Simulator.Outputs.DCMotor.MakeCIM"></member>
    <member name="M:HAL.Simulator.Outputs.DCMotor.MakeMiniCIM"></member>
    <member name="M:HAL.Simulator.Outputs.DCMotor.MakeRS550"></member>
    <member name="M:HAL.Simulator.Outputs.DCMotor.MakeRS775"></member>
    <member name="M:HAL.Simulator.Outputs.DCMotor.MakeTransmission(HAL.Simulator.Outputs.DCMotor,System.Int32,System.Double,System.Double)"></member>
    <member name="P:HAL.Simulator.Outputs.DCMotor.MaxSpeed"></member>
    <member name="P:HAL.Simulator.Outputs.DCMotor.MaxTorque"></member>
    <member name="T:HAL.Simulator.Outputs.ISimSpeedController">
      <summary>
            Interface for working with Speed Controllers in the simulator
            </summary>
    </member>
    <member name="M:HAL.Simulator.Outputs.ISimSpeedController.Get">
      <summary>
            Gets the current value commanded by the robot to the motor.
            </summary>
      <returns>The current value commanded by the robot code.</returns>
    </member>
    <member name="T:HAL.Simulator.Outputs.SimAnalogOutput">
      <summary>
            Class for interfacing with an Analog Output in the simulator
            </summary>
    </member>
    <member name="M:HAL.Simulator.Outputs.SimAnalogOutput.#ctor(System.Int32)">
      <summary>
            Creates a new Sim Analog Output reader.
            </summary>
      <param name="pin">The analog output pin to use.</param>
    </member>
    <member name="M:HAL.Simulator.Outputs.SimAnalogOutput.Get">
      <summary>
            Gets the current voltage of the Analog Output.
            </summary>
      <returns>The voltage commanded by the robot.</returns>
    </member>
    <member name="T:HAL.Simulator.Outputs.SimCANTalon">
      <summary>
            Class for interfacing with a CAN Talon from the simulator.
            </summary>
    </member>
    <member name="M:HAL.Simulator.Outputs.SimCANTalon.#ctor(System.Int32)">
      <summary>
            Creates a new CAN Talon in the simulator.
            </summary>
      <param name="id">The ID of the talon to read.</param>
    </member>
    <member name="P:HAL.Simulator.Outputs.SimCANTalon.Data">
      <summary>
            Gets the data structure for the CAN Talon
            </summary>
    </member>
    <member name="M:HAL.Simulator.Outputs.SimCANTalon.Get">
      <summary>
            Gets the current value commanded by the robot to the motor.
            </summary>
      <returns>The current value commanded by the robot code.</returns>
    </member>
    <member name="T:HAL.Simulator.Outputs.SimDigitalOutput">
      <summary>
            Class for interfacing with a Digital Output in the simulator
            </summary>
    </member>
    <member name="M:HAL.Simulator.Outputs.SimDigitalOutput.#ctor(System.Int32)">
      <summary>
            Creates a new Sim Digital Output reader.
            </summary>
      <param name="pin">The digital output pin to use.</param>
    </member>
    <member name="M:HAL.Simulator.Outputs.SimDigitalOutput.Get">
      <summary>
            Gets the current value of the Digital Output.
            </summary>
      <returns>The current value of the output.</returns>
    </member>
    <member name="T:HAL.Simulator.Outputs.SimPWMController">
      <summary>
            Class for interfacing with all PWM speed controllers.
            </summary>
    </member>
    <member name="M:HAL.Simulator.Outputs.SimPWMController.#ctor(System.Int32)">
      <summary>
            Creates a new PWM Speed controller for the Sim to use.
            </summary>
      <param name="port">The PWM port the Speed controller is attached to.</param>
    </member>
    <member name="M:HAL.Simulator.Outputs.SimPWMController.Get">
      <summary>
            Gets the current value commanded by the robot to the motor.
            </summary>
      <returns>The current value commanded by the robot code.</returns>
    </member>
    <member name="T:HAL.Simulator.Outputs.SimRelay">
      <summary>
            Class for interfacing with Relays in the simulator.
            </summary>
    </member>
    <member name="M:HAL.Simulator.Outputs.SimRelay.#ctor(System.Int32)">
      <summary>
            Creates a new Relay to use with the simulator.
            </summary>
      <param name="port">The relay port to read.</param>
    </member>
    <member name="M:HAL.Simulator.Outputs.SimRelay.GetForward">
      <summary>
            Gets if the relay forward is set.
            </summary>
      <returns>True if forward is set.</returns>
    </member>
    <member name="M:HAL.Simulator.Outputs.SimRelay.GetReverse">
      <summary>
            Gets if the relay reverse is set.
            </summary>
      <returns>True if reverse is set.</returns>
    </member>
    <member name="T:HAL.Simulator.Outputs.SimSolenoid">
      <summary>
            Class for interfacing with Solenoids in the simulator.
            </summary>
    </member>
    <member name="M:HAL.Simulator.Outputs.SimSolenoid.#ctor(System.Int32,System.Int32)">
      <summary>
            Creates a new solenoid for use with the simulator.
            </summary>
      <param name="port">The port on the PCM the solenoid is attached to.</param>
      <param name="module">The module number for the PCM.</param>
    </member>
    <member name="M:HAL.Simulator.Outputs.SimSolenoid.Get">
      <summary>
            Gets if the solenoid is outputting or not.
            </summary>
      <returns>True if the solenoid is set.</returns>
    </member>
  </members>
</doc>